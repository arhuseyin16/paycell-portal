{"version":3,"sources":["./src/app/services/password.service.ts","./src/app/services/i18n-mapping.service.ts","./src/app/shared/services/browser.service.ts","./src/app/models/request/merchant.id.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from \"../shared/app-config/app-config\";\n\nconst sendCodeURL =  '/api/password/reset/sendCode';\nconst verifyCodeURL =  '/api/password/verifyCode';\nconst updateByResetURL =  '/api/password/reset/update';\nconst updateURL =  '/api/password/update';\n\n@Injectable({providedIn: 'root'})\nexport class PasswordService {\n  constructor(private http: HttpClient,\n\t\t\t  private appConfig: AppConfig) {\n  }\n\n  sendCode(email: string): Observable<HttpResponse<any>> {\n    return this.http.post<any>(this.appConfig.formatPath(sendCodeURL), {email}, {observe: 'response'});\n  }\n\n  verifyCode(code: string): Observable<HttpResponse<any>> {\n    return this.http.post<any>(this.appConfig.formatPath(verifyCodeURL), {code}, {observe: 'response'});\n  }\n\n  updateByReset(code: string, newPassword: string): Observable<HttpResponse<any>> {\n    return this.http.post<any>(this.appConfig.formatPath(updateByResetURL), {code, newPassword}, {observe: 'response'});\n  }\n\n  update(oldPassword: string, newPassword: string): Observable<HttpResponse<any>> {\n    return this.http.post<any>(this.appConfig.formatPath(updateURL), {oldPassword, newPassword}, {observe: 'response'});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// import { createRequestOption } from 'app/shared/util/request-util';\nimport { AppConfig } from \"../shared/app-config/app-config\";\nimport { I18n } from \"../models/i18n.model\";\n\nconst requestURL = '/api/i18n';\nconst updateURL =  '/api/i18n';\n\n@Injectable({ providedIn: 'root' })\nexport class I18nMappingService {\n  constructor(private http: HttpClient,\n\t\t\t  private appConfig: AppConfig) {}\n\n  query(req: any): Observable<HttpResponse<any[]>> {\n    // const params: HttpParams = createRequestOption(req);\nconst params ={};\n\n    return this.http.get<any[]>(this.appConfig.formatPath(requestURL), {\n      params,\n      observe: 'response'\n    });\n  }\n\n  getFile(req: string): Observable<HttpResponse<any>> {\n    const params = {};\n    const v = new Date();\n    return this.http.get<any[]>(requestURL + '/'+ req + '.json?t='+v.getTime(), {\n      params,\n      observe: 'response'\n    });\n  }\n\n  update(i18nList: I18n[]): Observable<HttpResponse<I18n[]>> {\n    return this.http.post<I18n[]>(this.appConfig.formatPath(updateURL), i18nList, { observe: 'response' });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserService {\n\n  browserName = new BehaviorSubject<string>(\"\");\n\n  constructor() {\n    this.browserName.next(this.getBrowserName());\n  }\n\n  private getBrowserName() {\n    const agent = window.navigator.userAgent.toLowerCase()\n    switch (true) {\n      case agent.indexOf('edg') > -1:\n        return 'edge';\n      case agent.indexOf('edge') > -1:\n        return 'edge';\n      case agent.indexOf('opr') > -1 && !!(<any>window).opr:\n        return 'opera';\n      case agent.indexOf('chrome') > -1 && !!(<any>window).chrome:\n        return 'chrome';\n      case agent.indexOf('trident') > -1:\n        return 'ie';\n      case agent.indexOf('firefox') > -1:\n        return 'firefox';\n      case agent.indexOf('safari') > -1:\n        return 'safari';\n      default:\n        return 'other';\n    }\n  }\n}\n","export class MerchantId{\n  constructor(\n    public merchantId: string\n  ) {}\n}\n"],"sourceRoot":"webpack:///"}