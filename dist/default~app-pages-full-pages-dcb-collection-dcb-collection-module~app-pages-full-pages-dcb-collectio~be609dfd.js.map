{"version":3,"sources":["./src/app/util/return-localizedMessage.ts","./src/app/services/user.service.ts","./src/app/services/merchant.service.ts"],"names":[],"mappings":"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","file":"default~app-pages-full-pages-dcb-collection-dcb-collection-module~app-pages-full-pages-dcb-collectio~be609dfd.js","sourcesContent":["import {HttpErrorResponse} from '@angular/common/http';\n\nexport const ReturnLocalizedMessage = (err: HttpErrorResponse) => {\n  const staticMessage = 'Bilinmeyen Bir Hata.'\n  if (err.error.localizedMessage) {\n    const splitErrorMessage = err.error.localizedMessage.split('[');\n    return splitErrorMessage[0];\n  } else {\n    return staticMessage;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n// import { createRequestOption } from 'app/shared/util/request-util';\nimport {User} from '../models/user.model';\nimport {PfMain} from '../models/response/user-pf-transactions-summary/pf.main';\nimport {PfTransactionsSummary} from '../models/request/pf.transactions.summary';\nimport {PfTransactionsHistory} from '../models/request/pf.transactions.history';\nimport {PfTransactionReverse} from '../models/request/pf.transactions.reverse';\nimport {PfTransactionRefund} from '../models/request/pf.transactions.refund';\nimport {PfReverseRefundResponse} from '../models/response/user-pf-transactions-summary/reverse.refund.response';\nimport {DcbTransactionHistory} from '../models/request/dcb.transaction.history';\nimport {DcbCollectionHistory} from '../models/request/dcb.collection.history';\nimport {DcbTransactionHistoryResponse} from '../models/response/user-dcb-transaction-history/dcb.transaction.history.response';\nimport {Permission} from '../models/request/permission.model';\nimport {UserCreate} from '../models/request/user.create';\nimport {AppConfig} from '../shared/app-config/app-config';\nimport {DcbCollectionHistoryResponse} from '../models/response/user-dcb-collection-history/dcb.collection.history.response';\nimport {PfTransactionsHistoryResponse} from '../models/response/user-pf-transactions-history/pf.transactions.history.response';\nimport {DcbCollectionHistorySummary} from '../models/request/dcb.collection.history.summary';\nimport {DcbCollectionHistorySummaryResponse} from '../models/response/dcb-collection-history-summary/dcb.collection.history.summary.response';\nimport {DcbTransactionsSummary} from '../models/request/dcb.transactions.summary';\nimport {DcbMain} from '../models/response/dcb-transaction-summary/dcb.main';\nimport {DcbTransactionHistorySummary} from '../models/request/dcb.transaction.history.summary';\nimport {DcbTransactionHistorySummaryResponse} from '../models/response/dcb-transaction-history-summary/dcb.transaction.history.summary.response';\nimport {MailConfirmationResponse} from '../models/response/mail-confirmation.response';\nimport {DcbRefundModel} from '../models/request/dcb.refund.model';\n\nconst requestURL = '/api/user';\nconst updateURL = '/api/user';\nconst pfTransactionsSummaryUrl = '/api/pftransaction/summary'\nconst pfTransactionsHistoryUrl = '/api/pftransaction/history'\nconst pfTransactionsHistoryExportUrl = '/api/pftransaction/history-export'\nconst dcbTransactionHistoryExportUrl = '/api/dcbtransaction/transaction-history-export'\nconst dcbCollectionHistorySummaryExportUrl = '/api/dcbtransaction/collection-history-summary-export'\nconst dcbTransactionHistorySummaryExportUrl = '/api/dcbtransaction/transaction-history-summary-export'\nconst dcbCollectionHistoryExportUrl = '/api/dcbtransaction/collection-history-export'\nconst createUserUrl = '/api/user'\nconst pfTransactionRefundUrl = '/api/pftransaction/refund'\nconst pfTransactionReverseUrl = '/api/pftransaction/reverse'\nconst dcbTransactionURL = '/api/dcbtransaction/transaction-history'\nconst dcbTransactionSummaryUrl = '/api/dcbtransaction/transaction-history-summary'\nconst dcbCollectionURL = '/api/dcbtransaction/collection-history'\nconst dcbCollectionSummaryUrl = '/api/dcbtransaction/collection-history-summary'\nconst dcbTransactionsSummaryUrl = '/api/dcbtransaction/summary'\n\n\n/*\n*/\n@Injectable({providedIn: 'root'})\nexport class UserService {\n\n  readonly userMerchantUrl = '/api/merchant/user'\n  readonly childUrl = '/api/merchant'\n  readonly allUrl = '/api/merchant/user'\n  readonly userMerchantUrl2 = '/api/merchant/user/childs'\n  readonly userPermissionUrl = '/api/userpermission'\n  readonly pfTransactionRefundUrl = '/api/pftransaction/refund'\n  readonly pfTransactionReverseUrl = '/api/pftransaction/reverse'\n  readonly dcbTransactionURL = '/api/dcbtransaction/transaction-history'\n  readonly dcbCollectionURL = '/api/dcbtransaction/collection-history'\n  readonly dcbTransactionsSummaryUrl = '/api/dcbtransaction/summary'\n  readonly pfTransactionsSummaryUrl = '/api/pftransaction/summary'\n  readonly mailValidationUrl = '/api/user/mail-validation'\n  readonly dcbRefund = '/api/dcbtransaction/refund'\n\n  /*\n    readonly allMerchantUrl = API_SERVER_URL + '/api/merchant/all'\n  */\n\n  constructor(private http: HttpClient,\n              private appConfig: AppConfig) {\n  }\n\n  query(req: any): Observable<HttpResponse<any[]>> {\n    //const params: HttpParams = createRequestOption(req);\n    const params = {};\n\n    return this.http.get<any[]>(this.appConfig.formatPath(requestURL), {\n      params,\n      observe: 'response'\n    });\n  }\n\n  // create(user: IUser): Observable<HttpResponse<IUser>> {\n  //   return this.http.post<IUser>(this.resourceUrl, user, { observe: 'response' });\n  // }\n  //\n  update(userList: User[]): Observable<HttpResponse<User[]>> {\n    return this.http.post<User[]>(this.appConfig.formatPath(updateURL), userList, {observe: 'response'});\n  }\n\n  pfTransactionsSummary(pfTransactionsSummary: PfTransactionsSummary): Observable<HttpResponse<PfMain>> {\n    return this.http.post<PfMain>(this.appConfig.formatPath(pfTransactionsSummaryUrl), pfTransactionsSummary, {observe: 'response'})\n  }\n\n  pfTransactionsHistory(pfTransactionsHistory: PfTransactionsHistory): Observable<PfTransactionsHistoryResponse> {\n    return this.http.post<PfTransactionsHistoryResponse>(this.appConfig.formatPath(pfTransactionsHistoryUrl), pfTransactionsHistory)\n  }\n\n  pfTransactionsHistoryExport(pfTransactionsHistory: PfTransactionsHistory): Observable<Blob> {\n    return this.http.post(this.appConfig.formatPath(pfTransactionsHistoryExportUrl), pfTransactionsHistory, {responseType: 'blob'})\n  }\n\n  pfTransactionReverse(pfTransactionReverse: PfTransactionReverse): Observable<HttpResponse<PfReverseRefundResponse>> {\n    return this.http.post<PfReverseRefundResponse>(this.appConfig.formatPath(pfTransactionReverseUrl), pfTransactionReverse, {observe: 'response'})\n  }\n\n  pfTransactionRefund(pfTransactionRefund: PfTransactionRefund): Observable<HttpResponse<PfReverseRefundResponse>> {\n    return this.http.post<PfReverseRefundResponse>(this.appConfig.formatPath(pfTransactionRefundUrl), pfTransactionRefund, {observe: 'response'})\n  }\n\n  dcbTransactionHistory(dcbTransactionHistory: DcbTransactionHistory): Observable<DcbTransactionHistoryResponse> {\n    return this.http.post<DcbTransactionHistoryResponse>(this.appConfig.formatPath(dcbTransactionURL), dcbTransactionHistory)\n  }\n\n  dcbTransactionHistoryExport(dcbTransactionHistory: DcbTransactionHistory): Observable<Blob> {\n    return this.http.post(this.appConfig.formatPath(dcbTransactionHistoryExportUrl), dcbTransactionHistory, {responseType: 'blob'})\n  }\n\n  dcbCollectionHistory(dcbCollectionHistory: DcbCollectionHistory): Observable<DcbCollectionHistoryResponse> {\n    return this.http.post<DcbCollectionHistoryResponse>(this.appConfig.formatPath(dcbCollectionURL), dcbCollectionHistory)\n  }\n\n  dcbCollectionHistorySummary(dcbCollectionHistorySummary: DcbCollectionHistorySummary): Observable<DcbCollectionHistorySummaryResponse> {\n    return this.http.post<DcbCollectionHistorySummaryResponse>(this.appConfig.formatPath(dcbCollectionSummaryUrl), dcbCollectionHistorySummary)\n  }\n\n  dcbCollectionHistorySummaryExport(dcbCollectionHistorySummary: DcbCollectionHistorySummary): Observable<Blob> {\n    return this.http.post(this.appConfig.formatPath(dcbCollectionHistorySummaryExportUrl), dcbCollectionHistorySummary, {responseType: 'blob'})\n  }\n\n  dcbTransactionHistorySummary(dcbTransactionHistorySummary: DcbTransactionHistorySummary): Observable<DcbTransactionHistorySummaryResponse> {\n    return this.http.post<DcbTransactionHistorySummaryResponse>(this.appConfig.formatPath(dcbTransactionSummaryUrl), dcbTransactionHistorySummary)\n  }\n\n  dcbTransactionHistorySummaryExport(dcbTransactionHistorySummary: DcbTransactionHistorySummary): Observable<Blob> {\n    return this.http.post(this.appConfig.formatPath(dcbTransactionHistorySummaryExportUrl), dcbTransactionHistorySummary, {responseType: 'blob'})\n  }\n\n  dcbCollectionHistoryExport(dcbCollectionHistory: DcbCollectionHistory): Observable<Blob> {\n    return this.http.post(this.appConfig.formatPath(dcbCollectionHistoryExportUrl), dcbCollectionHistory, {responseType: 'blob'})\n  }\n\n  dcbTransactionsSummary(dcbTransactionsSummary: DcbTransactionsSummary): Observable<HttpResponse<DcbMain>> {\n    return this.http.post<DcbMain>(this.appConfig.formatPath(dcbTransactionsSummaryUrl), dcbTransactionsSummary, {observe: 'response'})\n  }\n\n\n  // find(login: string): Observable<HttpResponse<IUser>> {\n  //  return this.http.get<IUser>(`/${login}`, {observe: 'response'});\n  // }\n\n  //\n  // query(req?: any): Observable<HttpResponse<IUser[]>> {\n  //   const options = createRequestOption(req);\n  //   return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\n  // }\n  //\n  // delete(login: string): Observable<HttpResponse<any>> {\n  //   return this.http.delete(`${this.resourceUrl}/${login}`, { observe: 'response' });\n  // }\n\n  createUser(user: UserCreate): Observable<any | null> {\n\n    return this.http.post<any>(this.appConfig.formatPath(createUserUrl), user);\n  }\n\n  userMerchant(userUid: string): Observable<HttpResponse<any>> {\n    return this.http.get<any>(this.appConfig.formatPath(this.userMerchantUrl) + '/' + userUid, {observe: 'response'});\n\n  }\n\n  allChilds(merchantId: string): Observable<HttpResponse<any>> {\n    return this.http.get<any>(this.appConfig.formatPath(this.childUrl) + '/' + merchantId + '/child', {observe: 'response'});\n\n  }\n\n  allUser(): Observable<HttpResponse<any>> {\n    return this.http.get<any>(this.appConfig.formatPath(this.allUrl), {observe: 'response'});\n\n  }\n\n//  userMerchantList(): Observable<HttpResponse<Merchant[]>> {\n//    return this.http.get<Merchant[]>(this.appConfig.formatPath(this.userMerchantUrl) , {observe: 'response'});\n//  }\n\n  allPermissions(): Observable<HttpResponse<Permission>> {\n    return this.http.get<any>(this.appConfig.formatPath(this.userPermissionUrl), {observe: 'response'});\n  }\n\n  /* updateByReset(code: string, newPassword: string): Observable<HttpResponse<any>> {\n       return this.http.post<any>(updateByResetURL, {code, newPassword}, { observe: 'response' });\n     }*/\n  mailValidation(code: string): Observable<MailConfirmationResponse> {\n    return this.http.post<any>(this.appConfig.formatPath(this.mailValidationUrl), {code});\n  }\n\n  getRefund(refundRequest: DcbRefundModel): Observable<any> {\n    return this.http.post<DcbRefundModel>(this.appConfig.formatPath(this.dcbRefund), refundRequest);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Merchant} from \"../models/merchant\";\nimport {AppConfig} from \"../shared/app-config/app-config\";\nimport {UserMerchantChild} from \"../models/request/user.merchant.child\";\nimport {MerchantRoleModel} from '../models/request/merchant-role.model';\nimport {MerchantRoleResponse} from '../models/response/merchant-role.response';\n\nconst allMerchantsURL = '/api/merchant/all';\nconst childURL = '/api/merchant/child';\nconst userMerchantsURL = '/api/merchant/user';\nconst merchantFilterURL = '/api/merchant/filter';\nconst merchantUserUrl = '/api/merchant/user/permissions'\n/*\n*/\n\n@Injectable({providedIn: 'root'})\nexport class MerchantService {\n\n  constructor(private http: HttpClient, private appConfig: AppConfig) {\n  }\n\n  masterMerchantList(): Observable<HttpResponse<Merchant[]>> {\n    return this.http.get<Merchant[]>(this.appConfig.formatPath(allMerchantsURL), {observe: 'response'});\n  }\n\n  childMerchantList(merchantId:UserMerchantChild): Observable<HttpResponse<Merchant[]>> {\n    return this.http.post<Merchant[]>(this.appConfig.formatPath(childURL),{merchantId}, {observe: 'response'});\n  }\n  allUser(): Observable<HttpResponse<any>> {\n    return this.http.get<any>(this.appConfig.formatPath(userMerchantsURL));\n  }\n  userMerchantList(): Observable<HttpResponse<Merchant[]>> {\n    return this.http.get<Merchant[]>(this.appConfig.formatPath(userMerchantsURL) , {observe: 'response'});\n  }\n\n  merchantFilter(): Observable<HttpResponse<Merchant[]>> {\n    return this.http.get<Merchant[]>(this.appConfig.formatPath(merchantFilterURL), {observe: 'response'});\n  }\n\n  getMerchantPermissionList(model: MerchantRoleModel): Observable<MerchantRoleResponse> {\n    return this.http.post<MerchantRoleResponse>(this.appConfig.formatPath(merchantUserUrl), model);\n  }\n}\n"],"sourceRoot":"webpack:///"}