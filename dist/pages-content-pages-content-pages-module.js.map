{"version":3,"sources":["./src/app/models/auth/login.model.ts","./src/app/pages/content-pages/content-pages-routing.module.ts","./src/app/pages/content-pages/reset-password/reset-password-page.component.ts","./src/app/pages/content-pages/reset-password/reset-password-page.component.html","./src/app/pages/content-pages/change-password/change-password-page.component.ts","./src/app/pages/content-pages/change-password/change-password-page.component.html","./src/app/util/username.validators.ts","./src/app/pages/content-pages/orca-inline-user/orca-inline-user.component.ts","./src/app/pages/content-pages/orca-inline-user/orca-inline-user.component.html","./src/app/pages/content-pages/error/error-page.component.ts","./src/app/pages/content-pages/error/error-page.component.html","./src/app/pages/content-pages/content-pages.module.ts","./src/app/pages/content-pages/otp/otp-page.component.ts","./src/app/pages/content-pages/otp/otp-page.component.html","./src/app/pages/content-pages/login/login-page.component.ts","./src/app/pages/content-pages/login/login-page.component.html","./src/app/pages/content-pages/mail-confirmation/mail-confirmation.component.ts","./src/app/pages/content-pages/mail-confirmation/mail-confirmation.component.html","./src/app/pages/content-pages/merchant/merchant.component.ts","./src/app/pages/content-pages/merchant/merchant.component.html","./src/app/pages/content-pages/terminus/terminus-page.component.ts","./src/app/pages/content-pages/terminus/terminus-page.component.html"],"names":[],"mappings":"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","file":"pages-content-pages-content-pages-module.js","sourcesContent":["export class Login {\n  constructor(\n    public username: string,\n    public password: string,\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { OtpPageComponent } from \"./otp/otp-page.component\";\nimport { ResetPasswordPageComponent } from \"./reset-password/reset-password-page.component\";\nimport { ChangePasswordPageComponent } from \"./change-password/change-password-page.component\";\nimport { TerminusPageComponent } from \"./terminus/terminus-page.component\";\nimport {OrcaInlineUserComponent} from \"./orca-inline-user/orca-inline-user.component\";\nimport {MailConfirmationComponent} from './mail-confirmation/mail-confirmation.component';\nimport {MerchantComponent} from './merchant/merchant.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'error',\n        component: ErrorPageComponent,\n        data: {\n          title: 'Error Page'\n        }\n      },\n      {\n        path: 'login',\n        component: LoginPageComponent,\n        data: {\n          title: 'Login Page'\n        }\n      },\n      {\n        path: 'otp',\n        component: OtpPageComponent,\n        data: {\n          title: 'Otp Page'\n        }\n      },\n      {\n        path: 'merchant',\n        component: MerchantComponent,\n        data: {\n          title: 'Merchant Page'\n        }\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordPageComponent,\n        data: {\n          title: 'Reset Password Page'\n        }\n      },\n      {\n        path: 'reset-change-password',\n        component: ChangePasswordPageComponent,\n        data: {\n          title: 'Reset Password Page',\n          type: 'reset'\n        }\n      },\n      {\n        path: 'change-expired-password',\n        component: ChangePasswordPageComponent,\n        data: {\n          title: 'Change Expired Password Page',\n          type: 'expired'\n        }\n      },\n      {\n        path: 'terminus',\n        component: TerminusPageComponent,\n        data: {\n          title: 'Terminus Page',\n        }\n      },\n      {\n        path: 'orca-inline-user',\n        component: OrcaInlineUserComponent,\n        data: {\n          title: 'Orca Inline User Page',\n        }\n      },\n      {\n        path: 'email-activation',\n        component: MailConfirmationComponent,\n        data: {\n          title: 'User Mail Confirmation'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContentPagesRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { PasswordService } from \"../../../services/password.service\";\nimport { MessageService } from \"../../../shared/services/message.service\";\n\n\n@Component({\n  selector: 'app-reset-password-page',\n  templateUrl: './reset-password-page.component.html',\n  styleUrls: ['./reset-password-page.component.scss']\n})\nexport class ResetPasswordPageComponent {\n\n  resetForm = new FormGroup({\n    email: new FormControl(null, [Validators.email, Validators.required]),\n  });\n\n  formSubmitted = false;\n  alert: any;\n  \"\"\n  spinnerText: string;\n\n  constructor(private spinner: NgxSpinnerService,\n              public translate: TranslateService,\n              private passwordService: PasswordService,\n              private messageService: MessageService) {\n    this.initAlert(false, null, null);\n  }\n\n  get lf() {\n    return this.resetForm.controls;\n  }\n\n  onSubmit() {\n    this.initAlert(false, null, null);\n    this.formSubmitted = true;\n\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n    this.showSpinner('reset-password.spinner.loading');\n    this.passwordService\n      .sendCode(this.resetForm.value.email)\n      .subscribe(\n        (res) => {\n          this.resetSpinner();\n          this.initAlert(true, \"success\", res.body.localizedMessage ? res.body.localizedMessage : \"reset-password.message.success\");\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'reset-password.message.error'\n          });\n          this.resetSpinner();\n          this.initAlert(true, \"light-danger\", \"reset-password.message.error\");\n        }\n      );\n  }\n\n  showSpinner(text: string): void {\n    this.spinnerText = text;\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n\n  resetSpinner(): void {\n    this.spinnerText = null;\n    this.spinner.hide();\n  }\n\n  initAlert(active: boolean, type: string, message: string): void {\n    this.alert = {active, type, message: message ? message : null};\n  }\n}\n","<!--Login Page Starts-->\n<section id=\"reset-password\">\n  <div class=\"row auth-height full-height-vh m-0\"><div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\"> <app-lang-selector></app-lang-selector></div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">{{'reset-password.welcome.header' | translate }}</h4>\n                <p *ngIf=\"alert.type !== 'success'\">{{'reset-password.welcome.message' | translate }}</p>\n                <hr>\n\n                <form [formGroup]=\"resetForm\" *ngIf=\"alert.type !== 'success'\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\" [placeholder]=\"'reset-password.placeholder.email' | translate\"\n                      [ngClass]=\"{ 'is-invalid': formSubmitted && lf.email.invalid, 'is-valid': formSubmitted && !lf.email.invalid }\"\n                      required>\n                    <div *ngIf=\"formSubmitted && (lf.email.invalid || lf.email.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> {{'reset-password.error.required' | translate }}</div>\n                    <div *ngIf=\"formSubmitted && (lf.email.invalid || lf.email.errors?.email)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> {{'reset-password.error.email' | translate }}</div>\n                  </div>\n\n                  <div class=\"d-flex justify-content-end flex-sm-row flex-column\">\n                    <a  class=\"btn btn-dark\" (click)=\"onSubmit()\">{{'reset-password.button.submit' | translate }}</a>\n                  </div>\n                </form>\n\n                <div *ngIf=\"alert.type === 'success'\">\n                  <p>{{ alert.message | translate }}</p>\n                </div>\n                <hr>\n\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'reset-password.link.homePage' | translate }}</a>\n                  <ngx-spinner><p *ngIf=\"spinnerText\" style=\"font-size: 20px; color: white\">{{spinnerText | translate}}</p></ngx-spinner>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from 'app/shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { PasswordService } from \"../../../services/password.service\";\nimport { MessageService } from \"../../../shared/services/message.service\";\nimport { BrowserService } from 'app/shared/services/browser.service';\n\n\n@Component({\n  selector: 'app-change-password-page',\n  templateUrl: './change-password-page.component.html',\n  styleUrls: ['./change-password-page.component.scss']\n})\nexport class ChangePasswordPageComponent {\n\n  form = new FormGroup({\n    newPassword: new FormControl(null, [Validators.required]),\n    newPasswordRetype: new FormControl(null, [Validators.required]),\n  });\n\n  formSubmitted = false;\n  alert: any;\n  spinnerText: string;\n\n  token: string;\n  isResetProcess: boolean;\n\n  newPasswordInputType = \"password\";\n  retypeNewPasswordInputType = \"password\";\n  PasswordType: typeof Password;\n  browserName = \"\";\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              private spinner: NgxSpinnerService,\n              public translate: TranslateService,\n              private passwordService: PasswordService,\n              private route: ActivatedRoute,\n              private messageService: MessageService,\n              private browserService: BrowserService) {\n    this.initAlert(false, null);\n\n    this.route.data.subscribe(routeData => {\n      if (routeData.type === 'expired') {\n        this.isResetProcess = false;\n        this.form.valueChanges.subscribe((asd) => this.checkFieldsEquality(asd, this.form), null);\n      } else if (routeData.type === 'reset') {\n        this.isResetProcess = true;\n        this.form.valueChanges.subscribe((asd) => this.checkFieldsEquality(asd, this.form), null);\n        this.route.queryParams\n          .subscribe(params => {\n              this.token = params['token'];\n              this.verifyCode();\n            }\n          );\n      } else {\n        this.router.navigate(['']);\n      }\n    });\n\n    this.PasswordType = Password\n    this.subscribeBrowserName();\n  }\n\n  subscribeBrowserName() {\n    this.browserService.browserName.subscribe(res => {\n      this.browserName = res;\n    });\n  }\n\n  get lf() {\n    return this.form.controls;\n  }\n\n  verifyCode() {\n    this.initAlert(false, null);\n    this.showSpinner('change-password.spinner.loading');\n\n    this.passwordService.verifyCode(this.token)\n      .subscribe(\n        (response) => {\n          this.resetSpinner();\n\n          if (['invalid', 'confirmed', 'expired'].includes(response.body?.status)) {\n            this.initAlert(true, 'change-password.message.' + response.body.status);\n          }\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'change-password.message.error'\n          });\n          this.resetSpinner();\n          // if (err.status === 404 || err.status === 500)\n          this.initAlert(true, \"change-password.message.server-error\");\n        }\n      );\n  }\n\n  checkFieldsEquality(formControls, form: FormGroup) {\n    const keys = Object.keys(formControls);\n\n    if (formControls[keys[0]] !== formControls[keys[1]]) {\n      this.setControlError(form.controls[keys[0]], true);\n      this.setControlError(form.controls[keys[1]], true);\n    } else {\n      this.setControlError(form.controls[keys[0]], null);\n      this.setControlError(form.controls[keys[1]], null);\n    }\n  }\n\n  setControlError(control, error) {\n    if (error) {\n      let errors = control.errors ? control.errors : {};\n      errors['equal'] = true;\n      control.setErrors(errors);\n    } else if (control.errors) {\n      delete control.errors['equal'];\n      if (Object.keys(control.errors).length === 0) {\n        control.setErrors(null);\n      }\n    }\n  }\n\n  onSubmit() {\n    this.initAlert(false, null);\n    this.formSubmitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.showSpinner('change-password.spinner.changing');\n\n    (this.isResetProcess ?\n      this.passwordService.updateByReset(this.token, this.form.value.newPassword) :\n      this.authService.changeExpiredPass(this.form.value.newPassword))\n      .subscribe(\n        (res) => {\n          this.resetSpinner();\n          this.initAlert(true, \"change-password.message.success\");\n\n          if (!this.isResetProcess) {\n            this.router.navigate(['/pages/merchant']);\n          }\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'change-password.message.error'\n          });\n          this.resetSpinner();\n        }\n      );\n  }\n\n\n  showSpinner(text: string): void {\n    this.spinnerText = text;\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n\n  resetSpinner(): void {\n    this.spinnerText = null;\n    this.spinner.hide();\n  }\n\n  initAlert(active: boolean, message: string): void {\n    this.alert = {active, message: message ? message : null};\n  }\n\n  changePasswordInputType(type: Password) {\n    switch (type) {\n      case Password.newPassword:\n        this.newPasswordInputType === \"password\" ? this.newPasswordInputType = \"text\" : this.newPasswordInputType = \"password\";\n        break;\n      case Password.retypeNewPassword:\n        this.retypeNewPasswordInputType === \"password\" ? this.retypeNewPasswordInputType = \"text\" : this.retypeNewPasswordInputType = \"password\";\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nenum Password {\n  newPassword,\n  retypeNewPassword\n}\n","<!--Login Page Starts-->\n<section id=\"change-password\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\">\n      <app-lang-selector></app-lang-selector>\n    </div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">{{'change-password.welcome.header' | translate }}</h4>\n                <p *ngIf=\"!alert.active\">{{'change-password.welcome.message' | translate }}</p>\n                <hr>\n\n                <ng-container *ngIf=\"!alert.active\">\n                  <form [formGroup]=\"form\" *ngIf=\"alert.type !== 'success'\">\n\n                    <div class=\"form-group\">\n                      <div class=\"input-group\">\n                        <input [type]=\"newPasswordInputType\" formControlName=\"newPassword\" class=\"form-control\"\n                          [placeholder]=\"'change-password.placeholder.password' | translate\"\n                          [ngClass]=\"{ 'is-invalid': formSubmitted && lf.newPassword.invalid, 'is-valid': formSubmitted && !lf.newPassword.invalid }\"\n                          required>\n                        <span *ngIf=\"browserName!=='edge'\" class=\"input-group-append\">\n                          <button (click)=\"changePasswordInputType(PasswordType.newPassword)\"\n                            class=\"btn btn-outline-secondary border-left-0 border\" type=\"button\">\n                            <i [class]=\"newPasswordInputType==='password' ? 'fa fa-eye' : 'fa fa-eye-slash'\"></i>\n                          </button>\n                        </span>\n                        <div *ngIf=\"formSubmitted && (lf.newPassword.errors?.required)\"\n                          class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                          {{'change-password.error.required' | translate }}</div>\n                      </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                      <div class=\"input-group\">\n                        <input [type]=\"retypeNewPasswordInputType\" formControlName=\"newPasswordRetype\" class=\"form-control\"\n                          [placeholder]=\"'change-password.placeholder.passwordRetype' | translate\"\n                          [ngClass]=\"{ 'is-invalid': formSubmitted && lf.newPasswordRetype.invalid, 'is-valid': formSubmitted && !lf.newPasswordRetype.invalid }\">\n                          <span *ngIf=\"browserName!=='edge'\" class=\"input-group-append\">\n                            <button (click)=\"changePasswordInputType(PasswordType.retypeNewPassword)\" class=\"btn btn-outline-secondary border-left-0 border\"\n                              type=\"button\">\n                              <i [class]=\"retypeNewPasswordInputType==='password' ? 'fa fa-eye' : 'fa fa-eye-slash'\"></i>\n                            </button>\n                          </span>\n                        <div *ngIf=\"formSubmitted && (lf.newPasswordRetype.errors?.required)\"\n                          class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                          {{'change-password.error.required' | translate }}</div>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <div *ngIf=\"formSubmitted && (lf.newPasswordRetype.errors?.equal)\"\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                        {{'change-password.error.equal' | translate }}</div>\n                    </div>\n                    <div class=\"d-flex justify-content-end flex-sm-row flex-column\">\n                      <a class=\"btn btn-dark\" (click)=\"onSubmit()\">{{'change-password.button.submit' | translate }}</a>\n                    </div>\n\n                  </form>\n                </ng-container>\n\n                <ng-container *ngIf=\"alert.active\">\n                  <p>{{ alert.message | translate }}</p>\n                </ng-container>\n\n                <hr>\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'change-password.link.homePage' | translate }}</a>\n                  <ngx-spinner>\n                    <p *ngIf=\"spinnerText\" style=\"font-size: 20px; color: white\">{{spinnerText | translate}}</p>\n                  </ngx-spinner>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->\n","import { AbstractControl, Validators } from \"@angular/forms\";\n\nconst PHONE_REGEXP = /^[0-9]{10}$/;\n\nexport function usernameValidator(control: AbstractControl) {\n  if (control != null && !(control.value == null || control.value.length === 0)) {\n    if (!Validators.email(control)) {\n      return null;\n    }\n    if (PHONE_REGEXP.test(control.value)) {\n      return null;\n    }\n    return {pattern: true};\n  }\n  return null;\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport {NgxSpinnerService} from \"ngx-spinner\";\n\nimport {HttpResponse} from \"@angular/common/http\";\nimport {User} from \"../../../models/user.model\";\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-orca-inline-user',\n  templateUrl: './orca-inline-user.component.html',\n  styleUrls: ['./orca-inline-user.component.scss']\n})\nexport class  OrcaInlineUserComponent implements OnInit {\n  userList: User[];\n  isLoading= false;\n\n  constructor(\n    private spinner: NgxSpinnerService,\n    private userService: UserService,\n  ) {\n    this.loadUserList(null);\n  }\n\n  loadUserList(event) {\n    this.isLoading = true;\n    this.spinner.show(\"spinner1\");\n    this.userService.query({\n    }).subscribe(\n      (res: HttpResponse<any[]>) => this.onSuccess(res.body, res.headers),\n      (res: HttpResponse<any>) => this.onError(res.body)\n    );\n  }\n\n  private onSuccess(data, headers) {\n    this.userList = data.content;\n    this.isLoading = false;\n    this.spinner.hide(\"spinner1\");\n  }\n\n  private onError(error) {\n    this.isLoading = false;\n    this.spinner.hide(\"spinner1\");\n  }\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header  \"style=\"margin-left: 9%;\">\n      Kullanıcılar</div>\n    <!--  <p class=\"content-sub-header mb-1 \"style=\"margin-left: 9%;\">\n        You can define your sub-header here</p> -->\n  </div>\n</div>\n\n<section id=\"extended\">\n  <div class=\"row\">\n    <div class=\"col-10\" style=\"margin-left: auto;margin-right:auto;\">\n      <div class=\"card\">\n        <div class=\"card-header \">\n          <h4 class=\"card-title\"></h4>\n          <div class=\"d-flex justify-content-end flex-sm-row flex-column\">\n            <!-- <button type=\"button\" class=\"btn btn-info\" routerLink=\"/user-create/\">Kullanıcı Yarat</button> -->\n          </div>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\" >\n\n            <div class=\"table-responsive\">\n              <ngx-spinner name=\"spinner1\" [fullScreen]=\"false\" size=\"medium\"><p *ngIf=\"isLoading\" style=\"font-size: 20px; color: white\">yükleniyor...</p></ngx-spinner>\n              <table class=\"table table-striped table-striped m-0\">\n                <thead class=\"thead-light\">\n                <tr>\n                  <th scope=\"col\" width=\"40px\"></th>\n                  <th scope=\"col\">Id</th>\n                  <th scope=\"col\">Ad Soyad</th>\n                  <th scope=\"col\">E-mail</th>\n                  <th scope=\"col\">Msisdn</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let row of userList\">\n                  <th scope=\"row\"><img class=\"avatar\"\n                                       [src]=\"row.imageUrl ?row.imageUrl :'assets/img/portrait/small/user.png'\"\n                                       alt=\"avatar\" height=\"35\" width=\"35\"/></th>\n                  <td>\n                    {{ row.id }}\n                  </td>\n                  <td>\n                    {{ row.firstName }} {{ row.lastName }}\n                  </td>\n                  <td>\n                    {{ row.email }}\n                  </td>\n                  <td>\n                    {{ row.msisdn }}\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.scss']\n})\n\nexport class ErrorPageComponent {\n\n}","<!--Error page starts-->\n<section id=\"error\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\n            <div class=\"w-75 error-text mx-auto mt-4\">\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Error page ends-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\n\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { OtpPageComponent } from \"./otp/otp-page.component\";\nimport { TranslateModule } from \"@ngx-translate/core\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { ResetPasswordPageComponent } from \"./reset-password/reset-password-page.component\";\nimport { ChangePasswordPageComponent } from \"./change-password/change-password-page.component\";\nimport { TerminusPageComponent } from \"./terminus/terminus-page.component\";\nimport { OrcaInlineUserComponent } from './orca-inline-user/orca-inline-user.component';\nimport { MailConfirmationComponent } from './mail-confirmation/mail-confirmation.component';\nimport { MerchantComponent } from './merchant/merchant.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ContentPagesRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule,\n        NgxSpinnerModule,\n        TranslateModule,\n        SharedModule\n    ],\n  exports: [\n  ],\n  declarations: [\n    ErrorPageComponent,\n    LoginPageComponent,\n    OtpPageComponent,\n    ResetPasswordPageComponent,\n    ChangePasswordPageComponent,\n    TerminusPageComponent,\n    OrcaInlineUserComponent,\n    MailConfirmationComponent,\n    MerchantComponent\n  ]\n})\nexport class ContentPagesModule { }\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from 'app/shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MessageService } from \"../../../shared/services/message.service\";\nimport {SessionService} from '../../../shared/auth/session.service';\n\n@Component({\n  selector: 'app-otp-page',\n  templateUrl: './otp-page.component.html',\n  styleUrls: ['./otp-page.component.scss']\n})\nexport class OtpPageComponent implements OnInit, OnDestroy {\n\n  validateFormSubmitted = false;\n  isValidationFailed = false;\n  loadingText: string;\n\n  isSentOtp = false;\n  isSentOtpFailed = false;\n\n  otpLength = 6;\n\n  validateForm = new FormGroup({\n    otp: new FormControl(null, [Validators.required, Validators.pattern(new RegExp(`^[0-9]{${this.otpLength}}$`))]),\n  });\n\n  interval;\n  expireTimeLeft = 0;\n  expireTotalTimeInSecs = 0;\n  nextRequestTimeLeft = 0;\n  nextRequestTotalTimeInSecs = 0;\n  customerType = '1';\n\n  constructor(private router: Router, private http: HttpClient,\n              private authService: AuthService,\n              private spinner: NgxSpinnerService,\n              public translate: TranslateService,\n              private route: ActivatedRoute,\n              private ref: ChangeDetectorRef,\n              private sessionService: SessionService,\n              private messageService: MessageService) {\n    this.authService\n      .hasActiveOtp()\n      .subscribe(\n        (res) => {\n          const sendOtp = res.body;\n\n          this.expireTotalTimeInSecs = Math.floor((new Date(sendOtp.expireDate).getTime() - new Date().getTime()) / 1000);\n          this.expireTimeLeft = this.expireTotalTimeInSecs;\n          this.nextRequestTotalTimeInSecs = Math.floor((new Date(sendOtp.nextAvailableRequestDate).getTime() - new Date().getTime()) / 1000);\n          this.nextRequestTimeLeft = this.nextRequestTotalTimeInSecs;\n\n          let changed = false;\n          this.interval = setInterval(() => {\n            if (this.expireTimeLeft > 0) {\n              this.expireTimeLeft--;\n              changed = true;\n            }\n\n            if (this.nextRequestTimeLeft > 0) {\n              this.nextRequestTimeLeft--;\n              changed = true;\n            }\n            this.ref.detectChanges();\n            if (!changed) {\n              clearInterval(this.interval);\n            }\n          }, 1000);\n\n          this.isSentOtp = true;\n        },\n        (err) => {\n          this.sendOtp();\n        }\n      );\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  sendOtp(): void {\n    this.loadingText = 'validate-otp.message.sendingOtp';\n    this.showSpinner();\n\n    this.authService\n      .sendOtp()\n      .subscribe(\n        (res) => {\n          const sendOtp = res.body;\n\n          this.expireTotalTimeInSecs = Math.floor((new Date(sendOtp.expireDate).getTime() - new Date().getTime()) / 1000);\n          this.expireTimeLeft = this.expireTotalTimeInSecs;\n          this.nextRequestTotalTimeInSecs = Math.floor((new Date(sendOtp.nextAvailableRequestDate).getTime() - new Date().getTime()) / 1000);\n          this.nextRequestTimeLeft = this.nextRequestTotalTimeInSecs;\n\n\n          let changed = false;\n          this.interval = setInterval(() => {\n            if (this.expireTimeLeft > 0) {\n              this.expireTimeLeft--;\n              changed = true;\n            }\n\n            if (this.nextRequestTimeLeft > 0) {\n              this.nextRequestTimeLeft--;\n              changed = true;\n            }\n            this.ref.detectChanges();\n            if (!changed) {\n              clearInterval(this.interval);\n            }\n          }, 1000);\n\n          this.isSentOtp = true;\n          this.spinner.hide();\n          this.loadingText = null;\n\n\n//******************************************************************************************************\n//           this.http\n//             .get<string>(API_SERVER_URL + '/security/otpp', {observe: 'response'})\n//             .subscribe((res) => this.validateForm.controls['otp'].setValue(res.body), null);\n//******************************************************************************************************\n\n\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'validate-otp.error.message'\n          });\n\n          this.isSentOtpFailed = true;\n          this.spinner.hide();\n          this.loadingText = null;\n        }\n      );\n  }\n\n  get lf() {\n    return this.validateForm.controls;\n  }\n\n  // On submit button click\n  onSubmit() {\n    this.validateFormSubmitted = true;\n    if (this.validateForm.invalid) {\n      return;\n    }\n\n    this.showSpinner();\n    if (this.sessionService.getCustomerType() === '2') {\n      this.customerType = '2';\n    }\n\n    this.authService\n      .validateOtp(this.validateForm.value.otp, this.customerType)\n      .subscribe(\n        ({passExpired}) => {\n          this.isValidationFailed = false;\n          this.spinner.hide();\n\n          if (passExpired) {\n            this.router.navigate(['/pages/change-expired-password']);\n          } else {\n            this.router.navigate(['/pages/merchant']);\n          }\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'validate-otp.error.message'\n          });\n\n          this.isValidationFailed = true;\n          this.spinner.hide();\n        }\n      );\n  }\n\n  showSpinner() {\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n}\n","<!--Login Page Starts-->\n<section id=\"validate-otp\">\n  <div class=\"row auth-height full-height-vh m-0\"><div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\"> <app-lang-selector></app-lang-selector></div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">{{'validate-otp.welcome.header' | translate }}</h4>\n                <p>{{'validate-otp.welcome.message' | translate }}</p>\n                <hr>\n\n                <form [formGroup]=\"validateForm\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"otp\" class=\"form-control\" [placeholder]=\"'validate-otp.placeholder.otp' | translate\"\n                      [ngClass]=\"{ 'is-invalid': validateFormSubmitted && lf.otp.invalid, 'is-valid': validateFormSubmitted && !lf.otp.invalid }\"\n                      required>\n                    <div *ngIf=\"validateFormSubmitted && (lf.otp.invalid || lf.otp.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> {{'validate-otp.error.required' | translate }}</div>\n                    <div *ngIf=\"validateFormSubmitted && (lf.otp.invalid || lf.otp.errors?.pattern)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> {{'validate-otp.error.pattern' | translate:{size: otpLength} }}</div>\n                  </div>\n                  <div class=\"flex-column mb-2\">\n                    <ngb-progressbar striped=\"true\" inputmode=\"\" animated=\"true\"  type=\"dark\" [max]=\"expireTotalTimeInSecs\" [value]=\"expireTimeLeft\" height=\"10px\"></ngb-progressbar>\n                  </div>\n\n                  <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                    <a  class=\"btn btn-dark\" (click)=\"sendOtp()\" [ngClass]=\"{'disabled' : nextRequestTimeLeft > 0}\">\n                      {{'validate-otp.button.sendOtp' | translate }}\n                      <ng-container *ngIf=\"nextRequestTimeLeft > 0\">({{nextRequestTimeLeft}} {{'validate-otp.button.sendOtpSecs' | translate}})</ng-container>\n                    </a>\n                    <a  class=\"btn btn-dark\" (click)=\"onSubmit()\" [ngClass]=\"{'disabled' : expireTimeLeft <= 0}\">\n                      {{'validate-otp.button.submit' | translate }}\n                      <ng-container *ngIf=\"expireTimeLeft > 0\">({{expireTimeLeft}} {{'validate-otp.button.sendOtpSecs' | translate}})</ng-container>\n                    </a>\n                  </div>\n\n                </form>\n                <hr>\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'validate-otp.link.homePage' | translate }}</a>\n                  <ngx-spinner><p *ngIf=\"loadingText\" style=\"font-size: 20px; color: white\">{{loadingText | translate}}</p></ngx-spinner>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->\n","import { ChangeDetectorRef, Component, isDevMode } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from 'app/shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Login } from \"../../../models/auth/login.model\";\nimport { map } from \"rxjs/operators\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { SessionService } from \"../../../shared/auth/session.service\";\nimport { usernameValidator } from \"../../../util/username.validators\";\nimport { MessageService } from \"../../../shared/services/message.service\";\nimport { AppConfig } from \"../../../shared/app-config/app-config\";\nimport { BrowserService } from 'app/shared/services/browser.service';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\n\nexport class LoginPageComponent {\n\n  loginFormSubmitted = false;\n\n  loginForm = new FormGroup({\n    username: new FormControl(null, [Validators.required, usernameValidator]),\n    password: new FormControl(null, [Validators.required]),\n    rememberMe: new FormControl(false)\n  });\n\n  passwordInputType = \"password\";\n  isPasswordAutoCompleted = true;\n  browserName = \"\";\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private spinner: NgxSpinnerService,\n    public translate: TranslateService,\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private cdr: ChangeDetectorRef,\n    private messageService: MessageService,\n    private appConfig: AppConfig,\n    private browserService: BrowserService) {\n\n    this.sessionService.clearToken();\n    this.sessionService.clearPreAuthToken();\n    localStorage.removeItem('type');\n    localStorage.removeItem('merchantName');\n    localStorage.removeItem('merchantLength');\n    localStorage.removeItem('account');\n\n\n    this.subscribeBrowserName();\n  }\n\n  subscribeBrowserName() {\n    this.browserService.browserName.subscribe(res => {\n      this.browserName = res;\n    });\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.messageService.remove();\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.showSpinner();\n\n    this.authService\n      .login(new Login(this.loginForm.value.username, this.loginForm.value.password))\n      .subscribe(\n        (res) => {\n          this.spinner.hide();\n          this.router.navigate(['/pages/otp']);\n        },\n        (err) => {\n          this.messageService.addHttpError({\n            httpErrorResponse: err,\n            defaultMessage: 'login.error.message'\n          });\n          if (err.error.status === 403) {\n            this.lf.password.setValue(null);\n          }\n          this.spinner.hide();\n        }\n      );\n  }\n\n  isDevMode() {\n    return isDevMode();\n  }\n\n  onDirect() {\n    isDevMode()\n    {\n      this.messageService.remove();\n      this.loginFormSubmitted = true;\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      this.showSpinner();\n\n      return this.http\n        .post<any>(this.appConfig.getApiServerUrl() + '/security/loginn', {\n          username: this.loginForm.value.username,\n          password: this.loginForm.value.password\n        })\n        .pipe(map(response => this.sessionService.authSuccess(response)))\n        .subscribe(\n          (res) => {\n            this.spinner.hide();\n            this.router.navigate(['/pages/terminus']);\n          },\n          (err) => {\n            this.messageService.addHttpError({\n              httpErrorResponse: err,\n              defaultMessage: 'login.error.message'\n            });\n\n            this.sessionService.clearToken();\n            this.spinner.hide();\n          }\n        );\n    }\n  }\n\n  changePasswordInputType() {\n    if (this.passwordInputType === \"password\") this.passwordInputType = \"text\";\n    else this.passwordInputType = \"password\";\n  }\n\n  setPasswordVisible() {\n    setTimeout(() => {\n      if (this.isPasswordAutoCompleted && !this.lf.password.value) {\n        this.isPasswordAutoCompleted = false;\n      }\n    });\n  }\n\n  onPasswordFocus() {\n    this.setPasswordVisible();\n  }\n\n  onPasswordBlur() {\n    this.setPasswordVisible();\n  }\n\n  onPasswordChange(e: any) {\n    if (!e) this.setPasswordVisible();\n  }\n\n  showSpinner() {\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n\n}\n","<section id=\"login\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\">\n      <app-lang-selector></app-lang-selector>\n    </div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">{{'login.welcome.header' | translate }}</h4>\n                <p>{{'login.welcome.message' | translate }}</p>\n\n                <hr>\n\n                <form [formGroup]=\"loginForm\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                      [placeholder]=\"'login.placeholder.username' | translate\"\n                      [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\"\n                      required>\n                    <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                      {{'login.error.required' | translate }}</div>\n                    <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.pattern)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                      {{'login.error.pattern' | translate }}</div>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input [type]=\"passwordInputType\" formControlName=\"password\" class=\"form-control\"\n                        (focus)=\"onPasswordFocus()\" (blur)=\"onPasswordBlur()\" (ngModelChange)=\"onPasswordChange($event)\"\n                        [placeholder]=\"'login.placeholder.password' | translate\"\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\"\n                        required>\n                      <span *ngIf=\"!isPasswordAutoCompleted && browserName!=='edge'\" class=\"input-group-append\">\n                        <button (click)=\"changePasswordInputType()\"\n                          class=\"btn btn-outline-secondary border-left-0 border\" type=\"button\">\n                          <i [class]=\"passwordInputType==='password' ? 'fa fa-eye' : 'fa fa-eye-slash'\"></i>\n                        </button>\n                      </span>\n                    </div>\n                    <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i>\n                      {{'login.error.required' | translate }}</div>\n                  </div>\n\n                  <div class=\"d-sm-flex justify-content-end mb-3 font-small-2\">\n                    <a [routerLink]=\"['/pages/reset-password']\">{{'login.link.forgotPassword' | translate }}</a>\n                  </div>\n                  <div class=\"d-flex justify-content-end flex-sm-row flex-column\">\n                    <a class=\"btn btn-dark\" (click)=\"onSubmit()\">{{'login.button.submit' | translate }}</a>\n                  </div>\n\n                </form>\n                <hr>\n                <div *ngIf=\"isDevMode()\" class=\"d-flex justify-content-end flex-sm-row flex-column\">\n                  <a class=\"btn btn-dark\" (click)=\"onDirect()\">Direk Giriş</a>\n                </div>\n                <div class=\"d-flex justify-content-end align-items-center\">\n                  <ngx-spinner></ngx-spinner>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import {AfterViewInit, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {UserService} from '../../../services/user.service';\nimport {MessageService} from '../../../shared/services/message.service';\nimport {ReturnLocalizedMessage} from '../../../util/return-localizedMessage';\n\n@Component({\n  selector: 'app-mail-confirmation',\n  templateUrl: './mail-confirmation.component.html',\n  styleUrls: ['./mail-confirmation.component.scss']\n})\nexport class MailConfirmationComponent implements OnInit {\n  code: string;\n  alertMessage: string;\n  alertMessageContinue: string;\n  messageStatus: boolean;\n  errorMessage: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private spinner: NgxSpinnerService,\n              private userService: UserService,\n              private service: ChangeDetectorRef,\n              private messageService: MessageService) {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.code = params['token'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.mailConfirmation();\n  }\n\n  mailConfirmation(): void {\n    if (this.code) {\n      this.userService.mailValidation(this.code).subscribe(res => {\n        this.messageStatus = res.status;\n        this.service.detectChanges();\n      }, (err) => {\n        this.messageStatus = null;\n        this.service.detectChanges();\n        if (err.error.localizedMessage) {\n          this.errorMessage = ReturnLocalizedMessage(err);\n        }\n        this.messageService.addHttpError({\n          httpErrorResponse: err,\n          defaultMessage: 'mail-confirmation.message.error'\n        });\n      });\n    } else {\n      this.messageStatus = null;\n      this.service.detectChanges();\n      this.errorMessage = 'mail-confirmation.message.notCode';\n    }\n  }\n\n}\n","<!--E-Mail Confirmation Starts-->\n<section id=\"change-password\">\n  <div class=\"row auth-height full-height-vh m-0\"><div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\"> <app-lang-selector></app-lang-selector></div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n\n              <div class=\"col-lg-6 col-12 px-4 py-5\">\n                <h4 class=\"mb-2 card-title\">{{'mail-confirmation.welcome.header' | translate }}</h4>\n                  <p *ngIf=\"messageStatus === true\">{{'mail-confirmation.message.valid' | translate }}</p>\n                  <p *ngIf=\"messageStatus === false\">{{'mail-confirmation.message.invalid1' | translate }}</p>\n                  <p *ngIf=\"messageStatus === false\">{{'mail-confirmation.message.invalid2' | translate}}</p>\n                  <p *ngIf=\"messageStatus === undefined || messageStatus === null\">{{errorMessage | translate }}</p>\n                <hr>\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'mail-confirmation.link.homePage' | translate }}</a>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--E-Mail Confirmation Ends-->\n\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {MerchantService} from '../../../services/merchant.service';\nimport {MessageService} from '../../../shared/services/message.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AccountService} from '../../../shared/auth/account.service';\nimport {UserMerchantResponse} from '../../../models/response/user-merchant-response';\nimport {ReturnLocalizedMessage} from '../../../util/return-localizedMessage';\n\n@Component({\n  selector: 'app-merchant',\n  templateUrl: './merchant.component.html',\n  styleUrls: ['./merchant.component.scss']\n})\nexport class MerchantComponent implements OnInit {\n  merchant: any\n // merchantList: MerchantRoleResponse;\n  merchantList: UserMerchantResponse\n  showMerchant = false;\n  responseSuccess = false;\n  responseError = false;\n  errorMessage: string;\n\n  constructor(private router: Router,\n              private messageService: MessageService,\n              private translate: TranslateService,\n              private accountService: AccountService,\n              private service: ChangeDetectorRef,\n              private merchantService: MerchantService) {\n    this.merchantRequest();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  merchantRequest() {\n      localStorage.removeItem('merchantLength');\n      this.accountService.getUserAllMerchants().subscribe((res) => {\n        if (res.userMerchants.length === 1) {\n          localStorage.setItem('merchantLength', '1');\n          this.merchant = res.userMerchants[0].merchantId;\n          this.merchantList = res;\n          this.submitClick();\n        } else {\n          this.merchantList = res;\n        }\n        this.responseError = false;\n        this.responseSuccess = true;\n        this.showMerchant = true;\n        this.service.detectChanges();\n      }, (err) => {\n        this.errorMessage = ReturnLocalizedMessage(err);\n        this.responseSuccess = false;\n        this.responseError = true;\n        this.showMerchant = true;\n        this.service.detectChanges();\n      });\n  }\n\n  submitClick() {\n    if (this.merchant) {\n      const merchant = this.merchantList.userMerchants.find(m => m.merchantId === this.merchant);\n      localStorage.setItem('merchantName', JSON.stringify(merchant));\n      /*this.router.navigate(['/pages/terminus']).then(() => {\n        window.location.reload();\n      });*/\n      this.router.navigate(['/pages/terminus']);\n    } else {\n      this.messageService.addError(this.translate.instant('merchant.merchant.required'));\n    }\n  }\n}\n","<!--Login Page Starts-->\n<section id=\"validate-otp\" *ngIf=\"showMerchant\">\n  <div class=\"row auth-height full-height-vh m-0\"><div class=\"row full-width justify-content-end\" style=\"position:absolute;z-index: 9999\"> <app-lang-selector></app-lang-selector></div>\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-4 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n              <div class=\"col-lg-8 col-12 px-4 py-3\" *ngIf=\"responseSuccess\">\n                <h4 class=\"mb-2 card-title\">{{'merchant.welcome.header' | translate }}</h4>\n                <p>{{'merchant.select.info' | translate }}</p>\n                <hr>\n                <div class=\"col p-0 merchant-select\">\n                  <ng-select [items]=\"merchantList?.userMerchants\"\n                             bindLabel=\"merchantName\"\n                             bindValue=\"merchantId\"\n                             placeholder=\"Firma Adı\"\n                             [(ngModel)]=\"merchant\">\n                  </ng-select>\n                </div>\n                <div class=\"d-flex justify-content-end flex-sm-row flex-column mt-2 px-2\">\n                  <a (click)=\"submitClick()\" class=\"btn btn-dark\">{{'merchant.submit.btn' | translate }}</a>\n                </div>\n\n                <hr>\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'merchant.link.homePage' | translate }}</a>\n                </div>\n              </div>\n              <div class=\"col-lg-8 col-12 px-4 py-3 mt-5\" *ngIf=\"responseError\">\n                <p>{{errorMessage}}</p>\n                <hr>\n                <div class=\"d-sm-flex justify-content-end font-small-2\">\n                  <a [routerLink]=\"['/']\">{{'merchant.link.homePage' | translate }}</a>\n                </div>\n              </div>\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { AccountService } from \"../../../shared/auth/account.service\";\nimport { Router } from \"@angular/router\";\nimport {AppConfig} from \"../../../shared/app-config/app-config\";\nimport {UserService} from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-terminus-page',\n  templateUrl: './terminus-page.component.html',\n  styleUrls: ['./terminus-page.component.scss']\n})\n\nexport class TerminusPageComponent implements OnInit {\n\n  isProcessing = false;\n  spinnerText: string;\n  isFailed = false;\n  errorMessage: string;\n\n  constructor(private spinner: NgxSpinnerService,\n              private router: Router,\n              public translate: TranslateService,\n              public accountService: AccountService,\n              private appConfig:AppConfig,\n              private userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.errorMessage = null;\n    this.isFailed = false;\n    this.isProcessing = true;\n    this.showSpinner('terminus.spinner.text')\n\n    this.accountService.identity(true)\n      .subscribe(\n        (account) => {\n          localStorage.setItem('account', JSON.stringify(account));\n          this.isProcessing = false;\n          this.resetSpinner();\n\n          if (account?.customerType && account?.customerType.toString() === '2') {\n            this.router.navigate(['/pay-with-link']);\n          } else if (account && (!this.appConfig.isApiAllowed(this.userService.pfTransactionsSummaryUrl))\n            && (!this.appConfig.isApiAllowed(this.userService.dcbTransactionsSummaryUrl))) {\n            this.router.navigate(['/pf-home']);\n          } else if (account && (!this.appConfig.isApiAllowed(this.userService.pfTransactionsSummaryUrl))\n            && (this.appConfig.isApiAllowed(this.userService.dcbTransactionsSummaryUrl))) {\n            this.router.navigate(['/dcb-home']);\n          } else if (account && this.accountService.isFullyAuthenticated() &&\n            (this.appConfig.isApiAllowed(this.userService.pfTransactionsSummaryUrl))\n            && (!this.appConfig.isApiAllowed(this.userService.dcbTransactionsSummaryUrl))) {\n            this.router.navigate(['/pf-home']);\n          } else if (account && this.accountService.isFullyAuthenticated() &&\n            (this.appConfig.isApiAllowed(this.userService.pfTransactionsSummaryUrl))\n            && (this.appConfig.isApiAllowed(this.userService.dcbTransactionsSummaryUrl))) {\n            this.router.navigate(['/pf-home']);\n          } else {\n            this.isFailed = true;\n            this.errorMessage = 'terminus.error.message';\n          }\n        },\n        (err) => {\n          this.isProcessing = false;\n          this.resetSpinner();\n          this.isFailed = true;\n          this.errorMessage = err;\n        }\n      );\n  }\n\n  showSpinner(text: string): void {\n    this.spinnerText = text;\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n\n  resetSpinner(): void {\n    this.spinnerText = null;\n    this.spinner.hide();\n  }\n}\n","<!--Error page starts-->\n<section id=\"error\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\"  *ngIf=\"isFailed\">\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n<!--            <h1 class=\"mt-4\" *ngIf=\"!isFailed\">{{ 'terminus.message.routing' | translate }}</h1>-->\n            <div class=\"w-75 error-text mx-auto mt-4\">\n              <p>{{ 'terminus.error.title' | translate }}</p>\n              <p>{{ errorMessage | translate }}</p>\n            </div>\n            <a *ngIf=\"isFailed\" [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">{{ 'terminus.button.goHome' | translate }}</a>\n            <a *ngIf=\"isFailed\" (click)=\"fetchData()\" class=\"btn btn-warning my-2\">{{ 'terminus.button.retry' | translate }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ngx-spinner><p *ngIf=\"spinnerText\" style=\"font-size: 20px; color: white\">{{spinnerText | translate}}</p></ngx-spinner>\n\n</section>\n<!--Error page ends-->\n"],"sourceRoot":"webpack:///"}