Index: src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {ChangeDetectorRef, Component, QueryList, ViewChild, ViewChildren, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {DcbTransactionHistory} from \"../../../models/request/dcb.transaction.history\";\r\nimport {DcbTransactionHistoryResponse} from \"../../../models/response/user-dcb-transaction-history/dcb.transaction.history.response\";\r\nimport {DcbTransactionHistoryOrderResponse} from \"../../../models/response/user-dcb-transaction-history/dcb.transaction.history.order.response\";\r\nimport * as moment from \"moment\";\r\nimport {UserMerchant} from \"../../../models/request/user.merchant\";\r\nimport {Merchant} from \"../../../models/merchant\";\r\nimport {MerchantService} from \"../../../services/merchant.service\";\r\nimport {MessageService} from \"../../../shared/services/message.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {DatePipe} from '@angular/common';\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Error} from \"../../../models/response/error\";\r\nimport {MerchantId} from \"../../../models/request/merchant.id\";\r\nimport {ReturnLocalizedMessage} from '../../../util/return-localizedMessage';\r\nimport {DcbRefundModel} from '../../../models/request/dcb.refund.model';\r\nimport {MerchantIdsModel} from '../../../models/request/merchantIds.model';\r\n@Component({\r\n    selector: 'app-dcb-transaction',\r\n    templateUrl: './dcb-transaction.component.html',\r\n    styleUrls: ['./dcb-transaction.component.scss']\r\n})\r\nexport class DcbTransactionComponent implements OnInit {\r\n    orderNo: string;\r\n    selectedFundingSourceType: string;\r\n    selectedOrderType: string;\r\n    selectedPaymentStatus: string;\r\n    dcbTransactionHistoryResponse: DcbTransactionHistoryResponse;\r\n    currentDate: Date = new Date();\r\n    current: any;\r\n    past: any;\r\n    isOpen: boolean = false;\r\n    returnIsOpen = false;\r\n    returnToModel: any;\r\n    detailOrderNo: string;\r\n    detailOrderDate: string;\r\n    detailOrderType: string;\r\n    isOne: boolean = false;\r\n    l1: string;\r\n    l2: string;\r\n    l3: UserMerchant;\r\n    isUserMerchantChild: boolean = false;\r\n    startDate: any;\r\n    endDate: any;\r\n    isNoDataToDisplay: boolean = false;\r\n    pfFilter: number[] = [];\r\n    page = 1;\r\n    showTable: boolean = true;\r\n    collectionSize: number;\r\n    pageSize: number;\r\n    isPermission: boolean = false;\r\n    dcbTransactionHistory: DcbTransactionHistory;\r\n    dcbMerchantName: string;\r\n    dcbServiceId: number;\r\n    dcbServiceName: string;\r\n    orderId: number;\r\n    transactionAmount: number;\r\n    commissionAmount: number;\r\n    commissionRate: string;\r\n    fundingSourceType: string;\r\n    paymentType: string;\r\n    orderType: string;\r\n    paymentStatus: string;\r\n    merchantPaymentDate: string;\r\n    numberOfPage: number;\r\n    totalCount: number;\r\n    dcbOrders:DcbTransactionHistoryOrderResponse[];\r\n    detailDcbMerchantName:string;\r\n    detailDcbSubMerchantName:string;\r\n    detailDcbServiceName:string;\r\n    detailTransactionId:string;\r\n    detailFundingSourceType:string;\r\n    detailPaymentType:string;\r\n    detailPaymentStatus:string;\r\n    detailParam1:string;\r\n    detailParam2:string;\r\n    detailParam3:string;\r\n    detailTransactionAmount:number;\r\n    detailCommissionAmount:number;\r\n    detailCommissionRate:number;\r\n    detailMerchantPaymentDate: string;\r\n    error:Error;\r\n    localizedMessage:string;\r\n    message: string;\r\n    checkValue: boolean;\r\n    refundAmount: any;\r\n    refundReason: string;\r\n    netAmount = false;\r\n    dcbRefundDto: DcbRefundModel = new DcbRefundModel();\r\n    summaryRefund = false;\r\n    merchantIds: Array<MerchantIdsModel> = new Array<MerchantIdsModel>();\r\n\r\n  constructor(private userService: UserService,\r\n                private cdr: ChangeDetectorRef,\r\n                private merchantService: MerchantService,\r\n                private messageService: MessageService,\r\n                private spinner: NgxSpinnerService,\r\n                public translate: TranslateService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isOne = true;\r\n        this.past = moment(this.currentDate).subtract(1, 'day').format(\"YYYY-MM-DD\");\r\n        this.current = moment(this.currentDate).format(\"YYYY-MM-DD\");\r\n      const merchant = JSON.parse(localStorage.getItem('merchantName'));\r\n      const merchantIds = [];\r\n      merchantIds.push({\r\n        merchantId: merchant ? merchant.merchantId : null,\r\n        subMerchantId: null,\r\n        serviceId: null\r\n      });\r\n        this.onDcbPermission(merchantIds, this.past, this.current, null, null, null, null, 1);\r\n\r\n    }\r\n\r\n    closeFix(event, datePicker) {\r\n        if (event.target.offsetParent == null)\r\n            datePicker.close();\r\n        else if (event.target.offsetParent.nodeName != \"NGB-DATEPICKER\")\r\n            datePicker.close();\r\n    }\r\n\r\n    dateDiff(startDate, endDate) {\r\n        var start = new Date(startDate.year, startDate.month - 1, startDate.day, 0, 0, 0, 0);\r\n        var end = new Date(endDate.year, endDate.month - 1, endDate.day, 0, 0, 0, 0);\r\n        var timeDiff = Math.abs(end.getTime() - start.getTime());\r\n        var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n        return diffDays;\r\n    }\r\n    dateDiffIsBig(startDate, endDate) {\r\n        var start = new Date(startDate.year, startDate.month - 1, startDate.day, 0, 0, 0, 0);\r\n        var end = new Date(endDate.year, endDate.month - 1, endDate.day, 0, 0, 0, 0);\r\n        if (start.getTime() > end.getTime()) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    }\r\n    dateObjToDate(vDate) {\r\n        const datepipe: DatePipe = new DatePipe('tr-EN')\r\n        var cDate = new Date(vDate.year, vDate.month - 1, vDate.day, 0, 0, 0, 0);\r\n        let sDate = datepipe.transform(cDate, 'yyy-MM-dd');\r\n        return sDate;\r\n    }\r\n    convertIdList (merchantList : Merchant[]) {\r\n        let merchantIdList : MerchantId[] = [];\r\n        for (let i = 0 ; i < merchantList.length ; i++){\r\n        let merchantId = new MerchantId(merchantList[i].merchantId);\r\n        merchantIdList.push(merchantId);\r\n    }\r\n    return merchantIdList;\r\n  }\r\n    fundingSourceTypeItem = [\r\n        {id: 1, name: 'Mobil Ödeme', orginalName: 'MOBIL ODEME'},\r\n        {id: 2, name: 'Hediye Para', orginalName: 'HEDIYE PARA'}\r\n\r\n    ];\r\n    orderTypesItem = [\r\n        {id: 1, name: 'Satış', orginalName: 'SATIS'},\r\n        {id: 2, name: 'İade', orginalName: 'IADE'}\r\n\r\n    ];\r\n\r\n    paymentStatusItem = [\r\n        {id: 1, name: 'Ödendi', orginalName: 'ODENDI'},\r\n        {id: 2, name: 'Ödenmedi', orginalName: 'ODENMEDI'}\r\n    ];\r\n\r\n    onDcbPermission(merchantIds: Array<MerchantIdsModel>, startDate: string, endDate: string, orderId: number, fundingSourceType: string, orderType: string, paymentStatus: string, activePage: number) {\r\n        this.userService\r\n            .dcbTransactionHistory(new DcbTransactionHistory(merchantIds, startDate, endDate, orderId, fundingSourceType, orderType, paymentStatus, activePage))\r\n            .subscribe(\r\n                (res) => {\r\n                  if (res != null && res.orders != null) {\r\n                    this.isPermission = true;\r\n                    this.isUserMerchantChild = true;\r\n                    this.showTable = false;\r\n                    this.cdr.detectChanges();\r\n                  } else {\r\n                    this.isPermission = false;\r\n                    this.isUserMerchantChild = true;\r\n                    this.showTable = false;\r\n                    this.cdr.detectChanges();\r\n                  }\r\n                },\r\n                (err) => {\r\n                  if (err instanceof HttpErrorResponse) {\r\n                    if (err.status === 403) {\r\n                      this.isPermission = false;\r\n                      this.message = 'error.access.denied.message';\r\n                      this.cdr.detectChanges();\r\n                    } else {\r\n                      this.isPermission = false;\r\n                      this.message = ReturnLocalizedMessage(err);\r\n                      this.cdr.detectChanges();\r\n                    }\r\n                  }\r\n\r\n                }\r\n            );\r\n    }\r\n\r\n    isValidation(startDate, endDate) {\r\n        if (!this.selectedMerchant) {\r\n            this.messageService.addError(this.translate.instant('dcb.choose.merchant'));\r\n            return;\r\n        } else {\r\n            this.messageService.remove();\r\n        }\r\n        if (startDate == null || endDate == null) {\r\n            this.messageService.addError(this.translate.instant('dcb.startDate.and.EndDate.must'));\r\n            return;\r\n        } else {\r\n            this.messageService.remove();\r\n        }\r\n        if (this.dateDiffIsBig(startDate, endDate)) {\r\n            this.messageService.addError(this.translate.instant('dcb.startDate.cannot.greater.than.endDate'));\r\n            return;\r\n        } else {\r\n            this.messageService.remove();\r\n        }\r\n        /*if (this.dateDiff(startDate, endDate) > 30) {\r\n            this.messageService.addError(this.translate.instant('dcb.difference.between.startDate.and.endDate'));\r\n            return;\r\n        } else {\r\n            this.messageService.remove();\r\n            return true;\r\n        }*/\r\n      return true;\r\n\r\n\r\n    }\r\n    downloadFile(data: Blob) {\r\n        var link = document.createElement('a');\r\n        link.href = window.URL.createObjectURL(data);\r\n        var fileName = \"Export.xlsx\";\r\n        link.download = fileName;\r\n        link.click();\r\n    }\r\n\r\n    merchantIdsListRequest() {\r\n      this.merchantIds = [];\r\n      this.merchantIds.push({\r\n        merchantId: this.selectedMasterMerchant ? this.selectedMasterMerchant.merchantId : null,\r\n        subMerchantId: this.selectedLl1Merchant ? this.selectedLl1Merchant.merchantId : null,\r\n        serviceId: this.selectedLl2Merchant ? this.selectedLl2Merchant.merchantId : null\r\n      });\r\n    }\r\n\r\n    onDcbTransactionExport(startDate, endDate, selectedPage: number) {\r\n        if (!this.isValidation(startDate, endDate)) {\r\n            return\r\n        }\r\n        this.merchantIdsListRequest();\r\n        this.dcbTransactionHistory = new DcbTransactionHistory(\r\n           // this.convertIdList(this.selectedMerchant),\r\n          this.merchantIds,\r\n            this.dateObjToDate(startDate),\r\n            this.dateObjToDate(endDate),\r\n            this.orderId,\r\n            this.selectedFundingSourceType,\r\n            this.selectedOrderType,\r\n            this.selectedPaymentStatus,\r\n            selectedPage)\r\n\r\n        this.spinner.show(\"spinner1\");\r\n        this.userService\r\n            .dcbTransactionHistoryExport(this.dcbTransactionHistory).subscribe(\r\n                (response) => {\r\n                    this.spinner.hide(\"spinner1\");\r\n                    this.downloadFile(response);\r\n                },\r\n          async (err) => {\r\n            var result = JSON.parse(await err.error.text());\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'İşleminiz yapılamadı! ',\r\n              confirmButtonText: 'Tamam',\r\n              buttonsStyling: false,\r\n              customClass: {\r\n                confirmButton: 'btn btn-dark'\r\n              },\r\n              text: ReturnLocalizedMessage(err)\r\n            })\r\n          });\r\n    }\r\n\r\n\r\n    onDcbTransactionList(startDate, endDate, selectedPage: number) {\r\n        if (!this.isValidation(startDate, endDate)) {\r\n            return\r\n        }\r\n\r\n        this.page = selectedPage ?? 1;\r\n\r\n        this.merchantIdsListRequest();\r\n        this.dcbTransactionHistory = new DcbTransactionHistory(\r\n          //  this.convertIdList(this.selectedMerchant),\r\n          this.merchantIds,\r\n            this.dateObjToDate(startDate),\r\n            this.dateObjToDate(endDate),\r\n            this.orderId,\r\n            this.selectedFundingSourceType,\r\n            this.selectedOrderType,\r\n            this.selectedPaymentStatus,\r\n            this.page)\r\n\r\n        this.userService\r\n            .dcbTransactionHistory(this.dcbTransactionHistory).subscribe(\r\n                (res) => {\r\n                    if(res != null && res.orders != null) {\r\n                      this.dcbTransactionHistoryResponse = res;\r\n                      this.dcbOrders = this.dcbTransactionHistoryResponse.orders;\r\n                      if (this.dcbOrders == null) {\r\n                        this.isPermission = false;\r\n                      }\r\n                      if (this.dcbOrders.length < 1) {\r\n                        this.showTable = false;\r\n                        this.isNoDataToDisplay = true;\r\n                      }\r\n                      if (this.dcbOrders.length >= 1) {\r\n                        this.showTable = true;\r\n                        this.isNoDataToDisplay = false;\r\n                      }\r\n                      this.cdr.detectChanges();\r\n                      this.numberOfPage = this.dcbTransactionHistoryResponse.numberOfPage;\r\n                      this.collectionSize = res.totalCount;\r\n                      this.pageSize = res.pageSize;\r\n                    }\r\n                },\r\n           async(err) => {\r\n                 this.showTable = false;\r\n             if (err instanceof HttpErrorResponse) {\r\n               if (err.status === 403) {\r\n                 this.isPermission = false;\r\n                 this.message = 'error.access.denied.message';\r\n                 this.cdr.detectChanges();\r\n               } else {\r\n                 Swal.fire({\r\n                   icon: 'error',\r\n                   title: 'İşleminiz yapılamadı! ',\r\n                   confirmButtonText: 'Tamam',\r\n                   buttonsStyling: false,\r\n                   customClass: {\r\n                     confirmButton: 'btn btn-dark'\r\n                   },\r\n                   text: ReturnLocalizedMessage(err)\r\n                 })\r\n                 this.cdr.detectChanges();\r\n               }\r\n             }\r\n                });\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        this.onDcbTransactionList(this.startDate, this.endDate, page)\r\n    }\r\n\r\n  transactionDetail(detail: DcbTransactionHistoryOrderResponse) {\r\n      this.detailDcbMerchantName = detail.dcbMerchantName\r\n      this.detailDcbSubMerchantName = detail.dcbSubMerchantName\r\n      this.detailDcbServiceName = detail.dcbServiceName\r\n      this.detailOrderNo = detail.orderId;\r\n      this.detailTransactionId = detail.transactionId\r\n    if (detail.orderType == \"SATIS\") {\r\n      this.detailOrderType = this.translate.instant('dcb.sale')\r\n    }\r\n    if (detail.orderType == 'IADE') {\r\n      this.detailOrderType = this.translate.instant('dcb.refund')\r\n    }\r\n\r\n    if(detail.fundingSourceType =='MOBIL ODEME'){\r\n      this.detailFundingSourceType = this.translate.instant('dcb.mobile.payment')\r\n    }\r\n\r\n    if(detail.fundingSourceType =='HEDIYE PARA'){\r\n      this.detailFundingSourceType = this.translate.instant('dcb.gift.money')\r\n    }\r\n    this.detailPaymentType = detail.paymentType\r\n    this.detailPaymentStatus = detail.paymentStatus\r\n    this.detailTransactionAmount = detail.transactionAmount\r\n    this.detailCommissionRate = detail.commissionRate\r\n    this.detailCommissionAmount = detail.commissionAmount\r\n\r\n    this.detailOrderDate = detail.orderDate\r\n    this.detailMerchantPaymentDate = detail.merchantPaymentDate\r\n    this.detailParam1 = detail.param1;\r\n    this.detailParam2 = detail.param2;\r\n    this.detailParam3 = detail.param3;\r\n\r\n  }\r\n\r\n  openTransactionDetailModal(open: boolean): void {\r\n        this.isOpen = open;\r\n    }\r\n\r\n  refundSummaryCancel(close: boolean) {\r\n      this.summaryRefund = close;\r\n  }\r\n\r\n  refundSummaryCloseIcon() {\r\n      this.refundSummaryCancel(false);\r\n      this.refundModal(false);\r\n  }\r\n\r\n  refundSummaryContinue() {\r\n    this.userService.getRefund(this.dcbRefundDto).subscribe(res => {\r\n      this.refundSummaryCancel(false);\r\n      this.refundModal(false);\r\n      this.dcbRefundSwallMessageSuccess();\r\n      this.onDcbTransactionList(this.startDate, this.endDate, 1);\r\n    }, async(err) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status === 403) {\r\n          this.isPermission = false;\r\n          this.message = 'error.access.denied.message';\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          this.dcbRefundSwallMessageError(err);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  authoritiesValid(auth: string): boolean {\r\n    const account = JSON.parse(localStorage.getItem('account'));\r\n    const authValue = account.authorities.includes(auth);\r\n    if (!authValue) {\r\n      this.dcbRefundSwallMessageAuth();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  dcbRefundSwallMessageAuth() {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: this.translate.instant('pf.warning'),\r\n      confirmButtonText:  this.translate.instant('pf.ok'),\r\n      buttonsStyling: false,\r\n      customClass: {\r\n        confirmButton: 'btn btn-dark'\r\n      },\r\n      text: this.translate.instant('pf.access.denied'),\r\n    });\r\n  }\r\n\r\n  dcbRefundSwallMessageSuccess() {\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: this.translate.instant('dcb.successful'),\r\n      confirmButtonText:  this.translate.instant('pf.ok'),\r\n      buttonsStyling: false,\r\n      customClass: {\r\n        confirmButton: 'btn btn-dark'\r\n      },\r\n      text: this.translate.instant('dcb.refund.success'),\r\n    });\r\n  }\r\n\r\n  dcbRefundSwallMessageError(err: HttpErrorResponse) {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: this.translate.instant('dcb.refund.error'),\r\n      confirmButtonText:  this.translate.instant('pf.ok'),\r\n      buttonsStyling: false,\r\n      customClass: {\r\n        confirmButton: 'btn btn-dark'\r\n      },\r\n      text: ReturnLocalizedMessage(err),\r\n    });\r\n  }\r\n\r\n  refundModal(open: boolean, row?: any): void {\r\n    if (!this.authoritiesValid('DCB_REFUND')) {\r\n      return;\r\n    }\r\n    if (open) {\r\n      this.returnToModel = row;\r\n    } else {\r\n      this.checkValue = false;\r\n      this.refundReason = null;\r\n      this.refundAmount = null;\r\n    }\r\n    this.returnIsOpen = open;\r\n    this.netAmount = false;\r\n  }\r\n\r\n  refundContinue() {\r\n    if (!this.refundReasonValid()) {\r\n      return;\r\n    }\r\n    if (!this.refundAmountValid()) {\r\n      return;\r\n    }\r\n    if (!this.calculationValid()) {\r\n      return;\r\n    }\r\n    const merchant = JSON.parse(localStorage.getItem('merchantName'));\r\n    this.dcbRefundDto = {\r\n      merchantId: merchant.merchantId,\r\n      dcbMerchantId: this.returnToModel?.dcbMerchantId,\r\n      transactionId: this.returnToModel?.transactionId,\r\n      refundReason: this.refundReason,\r\n      amount: this.returnToModel?.transactionAmount,\r\n      refundAmount: this.checkValue ? Number(this.refundAmount) : this.returnToModel?.transactionAmount\r\n    }\r\n    if (this.dcbRefundDto) {\r\n      this.summaryRefund = true;\r\n    }\r\n  }\r\n\r\n  calculationValid(): boolean {\r\n    if (this.refundAmount) {\r\n      const splitAmount = this.refundAmount.split(',');\r\n      if (splitAmount.length > 1) {\r\n        if (splitAmount[1].length === 0) {\r\n          this.refundAmount = splitAmount[0];\r\n        } else {\r\n          this.refundAmount = splitAmount[0] + '.' + splitAmount[1];\r\n        }\r\n      } else if (splitAmount.length === 1) {\r\n        this.refundAmount = splitAmount[0];\r\n      }\r\n    }\r\n    if (Number(this.refundAmount) > Number(this.returnToModel?.transactionAmount)) {\r\n      const splitRefund = this.refundAmount.toString().split('.');\r\n      if (splitRefund.length > 1) {\r\n        if (splitRefund[1].length === 0) {\r\n          this.refundAmount = splitRefund[0];\r\n        } else {\r\n          this.refundAmount = splitRefund[0] + ',' + splitRefund[1];\r\n        }\r\n      } else if (splitRefund.length === 1) {\r\n        this.refundAmount = splitRefund[0];\r\n      }\r\n      this.netAmount = true;\r\n      return false;\r\n    }\r\n    this.netAmount = false;\r\n    return true;\r\n  }\r\n\r\n  refundReasonValid(): boolean {\r\n    if (!this.refundReason) {\r\n      this.messageService.addError(this.translate.instant('İade Sebebini Doldurmanız Gerekmektedir.'));\r\n      return false;\r\n    }\r\n    if (this.refundReason.length > 400) {\r\n      this.messageService.addError(this.translate.instant('400 karakterden fazla giremezsiniz.'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  refundAmountValid(): boolean {\r\n    if (this.checkValue) {\r\n      if (!this.refundAmount) {\r\n        this.messageService.addError(this.translate.instant('İşlem Tutarı Girmeniz Gereklidir.'));\r\n        return false;\r\n      }\r\n    }\r\n      return true;\r\n  }\r\n    //\r\n    //    transactionDetail(detail: DcbTransactionHistoryResponse) {\r\n    //\r\n    //\r\n    //    }\r\n    firmError = false;\r\n    isFirmModalOpen = false;\r\n\r\n    openFirmModal(open: boolean): void {\r\n        if (open) {\r\n            this.merchantFilters = null;\r\n            this.selectedMasterMerchant = null;\r\n            this.ll1Merchants = null;\r\n            this.selectedLl1Merchant = null;\r\n            this.ll2Merchants = null;\r\n            this.selectedLl2Merchant = null;\r\n            this.ll3Merchants = null;\r\n            this.selectedLl3Merchant = null;\r\n            this.getMerchantFilter();\r\n        } else {\r\n          this.selectedMerchant = [];\r\n            if ((this.merchantFilters == null || this.merchantFilters.length < 1)\r\n                && this.selectedMasterMerchant) {\r\n              this.selectedMerchant.push(this.selectedMasterMerchant);\r\n            }\r\n\r\n            if (this.merchantFilters && this.merchantFilters.length > 0) {\r\n                if (this.merchantFilters.length == 1 && !this.merchantFilters[0].hasSub) {\r\n                  this.selectedMerchant.push(this.merchantFilters[0]);\r\n                }\r\n                if (this.selectedMasterMerchant) {\r\n                  this.selectedMerchant.push(this.selectedMasterMerchant);\r\n                }\r\n            }\r\n\r\n            if (this.ll1Merchants && this.ll1Merchants.length > 0) {\r\n                if (this.selectedLl1Merchant) {\r\n                  this.selectedMerchant.push(this.selectedLl1Merchant);\r\n                }\r\n            }\r\n\r\n            if (this.ll2Merchants && this.ll2Merchants.length > 0) {\r\n                if (this.selectedLl2Merchant) {\r\n                  this.selectedMerchant.push(this.selectedLl2Merchant);\r\n                }\r\n            }\r\n\r\n            if (this.ll3Merchants && this.ll3Merchants.length > 0) {\r\n              if (this.selectedLl3Merchant) {\r\n                this.selectedMerchant.push(this.selectedLl3Merchant);\r\n            }\r\n          }\r\n          this.selectedMerchants = this.selectedMerchant.reverse()\r\n          this.lastSelectedMerchant = this.selectedMerchants[0]\r\n            if (!this.selectedMerchant) {\r\n                this.firmError = true;\r\n                this.messageService.addError(this.translate.instant('dcb.choose.merchant'));\r\n                return;\r\n            }\r\n            else {\r\n                this.messageService.remove();\r\n            }\r\n        }\r\n        this.isFirmModalOpen = open;\r\n    }\r\n\r\n    selectedMerchant: Merchant[];\r\n    merchantFilters: Merchant[];\r\n    selectedMasterMerchant: Merchant;\r\n    ll1Merchants: Merchant[];\r\n    selectedLl1Merchant: Merchant;\r\n    ll2Merchants: Merchant[];\r\n    selectedLl2Merchant: Merchant;\r\n    ll3Merchants: Merchant[];\r\n    selectedLl3Merchant: Merchant;\r\n    selectedMerchants: Merchant[];\r\n    lastSelectedMerchant: Merchant;\r\n\r\n    getMerchantFilter() {\r\n      const merchant = JSON.parse(localStorage.getItem('merchantName'));\r\n      if (merchant) {\r\n        this.merchantFilters = [];\r\n        this.merchantFilters.push(merchant);\r\n      }\r\n    }\r\n\r\n    onSelectedMasterMerchantChange() {\r\n        this.getChildMerchants(this.selectedMasterMerchant.merchantId, \"ll1\");\r\n    }\r\n\r\n    getOnL1MerchantChange() {\r\n        this.getChildMerchants(this.selectedLl1Merchant.merchantId, \"ll2\");\r\n    }\r\n\r\n    getOnL2MerchantChange() {\r\n        this.getChildMerchants(this.selectedLl2Merchant.merchantId, \"ll3\");\r\n   }\r\n\r\n    getOnL3MerchantChange() {\r\n    this.getChildMerchants(this.selectedLl3Merchant.merchantId, \"ll4\");\r\n  }\r\n\r\n    getChildMerchants(merchantId, level) {\r\n        this.merchantService\r\n            .childMerchantList(merchantId)\r\n            .subscribe(\r\n                (res) => {\r\n                    this[level + 'Merchants'] = res.body;\r\n                    this.cdr.detectChanges();\r\n                },\r\n                (err) => {\r\n                    this.messageService.addHttpError({\r\n                        httpErrorResponse: err,\r\n                        defaultMessage: null\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n  refundAmountChange(e) {\r\n    if (e) {\r\n      this.netAmount = false;\r\n    }\r\n  }\r\n\r\n  checkValueChange(e) {\r\n    if (e === false) {\r\n      this.netAmount = false;\r\n      this.refundAmount = null;\r\n    }\r\n  }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.ts b/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.ts
--- a/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.ts	(revision 2c94744d97df44e549aa164726e1988ece85f2da)
+++ b/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.ts	(date 1644230866907)
@@ -414,13 +414,16 @@
       this.onDcbTransactionList(this.startDate, this.endDate, 1);
     }, async(err) => {
       if (err instanceof HttpErrorResponse) {
-        if (err.status === 403) {
-          this.isPermission = false;
-          this.message = 'error.access.denied.message';
-          this.cdr.detectChanges();
-        } else {
-          this.dcbRefundSwallMessageError(err);
-        }
+        this.refundSummaryCloseIcon();
+        this.dcbRefundSwallMessageError(err);
+        this.cdr.detectChanges();
+        /* if (err.status === 403) {
+           this.isPermission = false;
+           this.message = 'error.access.denied.message';
+           this.cdr.detectChanges();
+         } else {
+           this.dcbRefundSwallMessageError(err);
+         }*/
       }
     });
   }
Index: src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"content-header\">{{'dcb.transaction-header' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"isPermission\">\r\n    <!--Merchant Select Card Start-->\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"card-body\" style=\"margin-bottom: 2rem;\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <fieldset>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">{{'dcb.merchant' | translate }}</span>\r\n                                        </div>\r\n                                        <span class=\"form-control\"\r\n                                              aria-describedby=\"basic-addon1\">{{lastSelectedMerchant?.merchantName|| ''}}</span>\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn btn-dark\" type=\"button\" (click)=\"openFirmModal(true)\">{{'dcb.choose' | translate }}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"başlangıçtarihi\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.start.date' | translate }}</label>\r\n                                <div class=\"input-group\" id=\"p1\">\r\n                                    <input class=\"form-control\" [minDate]=\"{year: 2019, month: 4, day: 22}\"\r\n                                           placeholder=\"{{past| date: 'yyyy-MM-dd'}}\" name=\"dp\" ngbDatepicker\r\n                                           #d=\"ngbDatepicker\" [(ngModel)]=\"startDate\">\r\n                                           <!---->\r\n                                           <div class=\"input-group-append\">\r\n                                        <div class=\"input-group-text\" (click)=\"d.toggle();\">\r\n                                            <i class=\"fa fa-calendar\" style=\"cursor: pointer;\">\r\n                                            </i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"bitistarihi\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.end.date' | translate }}</label>\r\n                                <div class=\"input-group\" id=\"p2\">\r\n                                    <input class=\"form-control\" [minDate]=\"{year: 2019, month: 4, day: 22}\"\r\n                                           placeholder=\"{{current| date: 'yyyy-MM-dd'}}\" name=\"b\" ngbDatepicker\r\n                                           #b=\"ngbDatepicker\" [(ngModel)]=\"endDate\">\r\n                                           <!---->\r\n                                           <div class=\"input-group-append\">\r\n                                        <div class=\"input-group-text\" (click)=\"b.toggle();\">\r\n                                            <i class=\"fa fa-calendar\" style=\"cursor: pointer;\">\r\n                                            </i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"siparisno\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.order.number' | translate }}</label>\r\n                                <input ngmodel=\"\" required id=\"firstname\" #_orderNo=\"ngModel\"\r\n                                       maxlength=\"100\" name=\"firstname\" type=\"text\" [(ngModel)]=\"orderId\"\r\n                                       class=\"form-control input-md ng-untouched ng-pristine ng-invalid\" style=\"width: 97%\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"odemearacitipi\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.funding.source.type' | translate }}</label>\r\n                                <ng-select [items]=\"fundingSourceTypeItem\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"orginalName\"\r\n                                    placeholder=\"{{'dcb.please.choose' | translate }}\"\r\n                                    [(ngModel)]=\"selectedFundingSourceType\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"siparistipi\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.order.type' | translate }}</label>\r\n                                <ng-select [items]=\"orderTypesItem\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"orginalName\"\r\n                                    placeholder=\"{{'dcb.please.choose' | translate }}\"\r\n                                    [(ngModel)]=\"selectedOrderType\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <label id=\"odemeDurumu\" class=\"form-control-label\" style=\"font-weight: 500\">{{'dcb.payment.status' | translate }}</label>\r\n                                <ng-select [items]=\"paymentStatusItem\"\r\n                                    bindLabel=\"name\"\r\n                                    bindValue=\"orginalName\"\r\n                                    placeholder=\"{{'dcb.please.choose' | translate }}\"\r\n                                    [(ngModel)]=\"selectedPaymentStatus\">\r\n                                </ng-select>\r\n                            </div>\r\n                            <div class=\"col-md-4\" style=\"padding-top: 24px\">\r\n                                <button class=\"btn btn-dark btn-block\" type=\"button\"\r\n                                        (click)=\"onDcbTransactionList(startDate,endDate,1)\">{{'dcb.search' | translate }}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"isNoDataToDisplay\" class=\"table-responsive\">\r\n                        <table class=\"table m-0\" style=\"background-color: white;\">\r\n                            <thead class=\"thead-light\">\r\n                                <tr>\r\n                                    <th>{{'dcb.sub.merchant.name' | translate }}</th>\r\n                                    <th>{{'dcb.lower.order.number' | translate }}</th>\r\n                                    <th>{{'dcb.order.date' | translate }}</th>\r\n                                    <th>{{'dcb.transaction.amount' | translate }}</th>\r\n                                    <th>{{'dcb.commission.amount' | translate }}</th>\r\n                                    <th>{{'dcb.lower.funding.source.type' | translate }}</th>\r\n                                    <th>{{'dcb.lower.order.type' | translate }}</th>\r\n                                    <th>{{'dcb.payment.status' | translate }}</th>\r\n                                    <th>{{'dcb.action' | translate }}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{{'dcb.no.data.to.display' | translate }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"showTable\" class=\"table-responsive\">\r\n                    <table class=\"table m-0\">\r\n                        <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th>{{'dcb.sub.merchant.name' | translate }}</th>\r\n                                <th>{{'dcb.lower.order.number' | translate }}</th>\r\n                                <th>{{'dcb.order.date' | translate }}</th>\r\n                                <th>{{'dcb.transaction.amount' | translate }}</th>\r\n                                <th>{{'dcb.commission.amount' | translate }}</th>\r\n                                <th>{{'dcb.lower.funding.source.type' | translate }}</th>\r\n                                <th>{{'dcb.lower.order.type' | translate }}</th>\r\n                                <th>{{'dcb.payment.status' | translate }}</th>\r\n                                <th>{{'dcb.action' | translate }}</th>\r\n                                <th></th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let row of dcbOrders\">\r\n                                <td>{{row.dcbSubMerchantName}}</td>\r\n                                <td>{{row.orderId}}</td>\r\n                                <td>{{row.orderDate|date:'dd.MM.yyyy HH:mm:ss'}}</td>\r\n                                <td><div *ngIf=\"row.transactionAmount\" class=\"col\" > {{row.transactionAmount|number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</div></td>\r\n                                <td><div *ngIf=\"row.commissionAmount\" class=\"col\" > {{row.commissionAmount|number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</div></td>\r\n                                <td>\r\n                                    <div *ngIf=\"row.fundingSourceType=='MOBIL ODEME'\"\r\n                                        class=\"badge badge-pill bg-light-primary ng-star-inserted\">{{'dcb.mobile.payment' | translate }}\r\n                                </div>\r\n                                <div *ngIf=\"row.fundingSourceType=='HEDIYE PARA'\"\r\n                                    class=\"badge badge-pill bg-light-info ng-star-inserted\">{{'dcb.gift.money' | translate }}\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div *ngIf=\"row.orderType=='SATIS'\"\r\n                                class=\"badge badge-pill bg-light-success ng-star-inserted\">{{'dcb.sale' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"row.orderType=='IADE'\"\r\n                                class=\"badge badge-pill bg-light-danger ng-star-inserted\">{{'dcb.refund' | translate }}\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div *ngIf=\"row.paymentStatus=='ODENDI'\"\r\n                                class=\"badge badge-pill bg-light-success ng-star-inserted\">{{'dcb.paid' | translate }}\r\n                            </div>\r\n                            <div *ngIf=\"row.paymentStatus=='ODENMEDI'\"\r\n                                class=\"badge badge-pill bg-light-danger ng-star-inserted\">{{'dcb.not.paid' | translate }}\r\n                            </div>\r\n                        </td>\r\n                        <td style=\"color: #975aff!important;cursor: pointer;\" (click)=\"openTransactionDetailModal(true);transactionDetail(row)\">\r\n                          {{'dcb.detail' | translate }}\r\n                        </td>\r\n                        <td style=\"color: #ff5722!important;cursor: pointer;\" *ngIf=\"(['ODENDI','ODENMEDI'].includes(row.paymentStatus))\" (click)=\"refundModal(true, row)\">\r\n                          {{'dcb.return.to' | translate}}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div *ngIf=\"showTable\">\r\n                <button class=\"btn btn-dark btn-block\" style=\"max-width:140px; margin-left: 10px\" type=\"button\"\r\n                        (click)=\"onDcbTransactionExport(startDate,endDate,1)\">{{'dcb.export' | translate }}</button>\r\n                <div *ngIf=\"showTable\" class=\"mt-3 mr-3 pagination-container\">\r\n                    <ngb-pagination style=\"color: #975aff!important;\" role=\"navigation\" [collectionSize]=\"this.collectionSize\"\r\n                                    [maxSize]=\"5\" [pageSize]=\"this.pageSize\" [(page)]=\"page\" [rotate]=\"true\"\r\n                                    [ellipses]=\"false\" [boundaryLinks]=\"true\" (pageChange)=\"loadPage($event)\"></ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n<!--Merchant Select Card Finish-->\r\n<!--Table Detail Start-->\r\n<div *ngIf=\"!isNoDataToDisplay\" id=\"mdlSample\" class=\"overlay\" role=\"dialog\"\r\n    [ngStyle]=\"{'display': isOpen ? 'block' : 'none', 'opacity': 1}\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\" style=\"position: absolute;\r\n             margin-top: 10rem;\r\n             border-bottom: 2px solid black;height: 40rem;\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">{{'dcb.order.detail' | translate }}</h4>\r\n                <button type=\"button\" aria-label=\"Close\" class=\"close\">\r\n                    <span aria-hidden=\"true\" (click)=\"openTransactionDetailModal(false)\">×</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-content\" id=\"popup\">\r\n                <div class=\"container\">\r\n                    <br>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.d.merchant.name' | translate }}:</div> <div class=\"col\">{{detailDcbMerchantName}}</div>\r\n                    </div>\r\n                  <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.d.sub.merchant.name' | translate }}:</div> <div class=\"col\">{{detailDcbSubMerchantName}}</div>\r\n                    </div>\r\n                  <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.d.service.name' | translate }}:</div> <div class=\"col\">{{detailDcbServiceName}}</div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.lower.order.number' | translate }}:</div> <div class=\"col\">{{detailOrderNo}}</div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.transaction.id' | translate }}:</div> <div class=\"col\">{{detailTransactionId}}</div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.lower.order.type' | translate }}:</div> <div class=\"col\">{{detailOrderType}}</div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-4\">{{'dcb.lower.funding.source.type' | translate }}:</div> <div class=\"col\">{{detailFundingSourceType}}</div>\r\n                    </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.payment.type' | translate }}:</div> <div class=\"col\">{{detailPaymentType}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.payment.status' | translate }}:</div> <div class=\"col\">{{detailPaymentStatus}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.transaction.amount' | translate }}:</div> <div *ngIf=\"detailTransactionAmount\" class=\"col\">{{detailTransactionAmount|number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.commission.rate' | translate }}:</div> <div class=\"col\">{{detailCommissionRate}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.commission.amount' | translate }}:</div> <div *ngIf=\"detailCommissionAmount\" class=\"col\">{{detailCommissionAmount|number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.order.date' | translate }}:</div> <div class=\"col\">{{detailOrderDate|date:'dd.MM.yyyy HH:mm:ss'}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div *ngIf=\"detailPaymentStatus=='ODENDI'\"class=\"col-xl-4\">{{'dcb.merchant.payment.date' | translate }}:</div>\r\n                    <div *ngIf=\"detailPaymentStatus=='ODENDI'\"class=\"col\">{{detailMerchantPaymentDate|date:'dd.MM.yyyy HH:mm:ss'}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.param1' | translate }}:</div> <div class=\"col\">{{detailParam1}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.param2' | translate }}:</div> <div class=\"col\">{{detailParam2}}</div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-xl-4\">{{'dcb.param3' | translate }}:</div> <div class=\"col\">{{detailParam3}}</div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Table Detail Finish-->\r\n<!--Merchant Select Dialog Start-->\r\n<div class=\"overlay\" role=\"dialog\"\r\n     [ngStyle]=\"{'display': isFirmModalOpen ? 'block' : 'none', 'opacity': 1}\">\r\n     <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\" style=\"min-height:550px; margin-top: 10rem;\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">{{'dcb.header.choose.merchant' | translate }}</h4>\r\n                <button type=\"button\" aria-label=\"Close\" class=\"close\">\r\n                    <span aria-hidden=\"true\" (click)=\"openFirmModal(false)\">×</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <!--<span *ngIf=\"firmError\" class=\"mb-2\" style=\"color: red\"> Lütfen Seçim Yapınız</span>-->\r\n                <span *ngIf=\"!merchantFilters\"> {{'dcb.merchant.loading' | translate }}</span>\r\n                <div class=\"col-12 col-sm-12\" *ngIf=\"merchantFilters && merchantFilters.length>0\">\r\n                    <label id=\"üyeisyeri\" class=\"form-control-label\"\r\n                           style=\"font-weight: 500;margin-top: 2rem;margin-left: -1rem\">{{'dcb.upper.merchant' | translate }}</label>\r\n                    <ng-select class=\"form-control mb-2\" *ngIf=\"merchantFilters\"\r\n                               [items]=\"merchantFilters\"\r\n                               [(ngModel)]=\"selectedMasterMerchant\" [ngModelOptions]=\"{standalone: true}\"\r\n                               (ngModelChange)=\"onSelectedMasterMerchantChange()\"\r\n                               bindLabel=\"merchantName\"\r\n                               placeholder=\"{{'dcb.please.choose' | translate }}\">\r\n                               <ng-template ng-label-tmp let-item=\"item\">\r\n                            {{item.merchantName}}\r\n                        </ng-template>\r\n                        <ng-template ng-option-tmp let-item=\"item\">\r\n                            <div title=\"{{item.merchantId}}\">{{item.merchantName}}</div>\r\n                        </ng-template>\r\n                    </ng-select>\r\n\r\n                    <ng-select class=\"form-control mb-2\" *ngIf=\"ll1Merchants && ll1Merchants.length>0\"\r\n                        [items]=\"ll1Merchants\"\r\n                        [(ngModel)]=\"selectedLl1Merchant\" [ngModelOptions]=\"{standalone: true}\"\r\n                        (ngModelChange)=\"getOnL1MerchantChange()\"\r\n                        bindLabel=\"merchantName\"\r\n                        placeholder=\"{{'dcb.choose.sub.merchant' | translate }}\">\r\n                        <ng-template ng-label-tmp let-item=\"item\">\r\n                            {{item.merchantName}}\r\n                        </ng-template>\r\n                        <ng-template ng-option-tmp let-item=\"item\">\r\n                            <div title=\"{{item.merchantId}}\"> {{item.merchantName}}</div>\r\n                        </ng-template>\r\n                    </ng-select>\r\n\r\n                    <ng-select class=\"form-control mb-2\" *ngIf=\"ll2Merchants && ll2Merchants.length>0\"\r\n                        [items]=\"ll2Merchants\"\r\n                        [(ngModel)]=\"selectedLl2Merchant\" [ngModelOptions]=\"{standalone: true}\"\r\n                               (ngModelChange)=\"getOnL2MerchantChange()\"\r\n                        bindLabel=\"merchantName\"\r\n                        placeholder=\"{{'dcb.choose.sub.merchant' | translate }}\">\r\n                        <ng-template ng-label-tmp let-item=\"item\">\r\n                            {{item.merchantName}}\r\n                        </ng-template>\r\n                        <ng-template ng-option-tmp let-item=\"item\">\r\n                            <div title=\"{{item.merchantId}}\">{{item.merchantName}}</div>\r\n                        </ng-template>\r\n                    </ng-select>\r\n\r\n                  <ng-select class=\"form-control mb-2\" *ngIf=\"ll3Merchants && ll3Merchants.length>0\"\r\n                             [items]=\"ll3Merchants\"\r\n                             [(ngModel)]=\"selectedLl3Merchant\" [ngModelOptions]=\"{standalone: true}\"\r\n                             (ngModelChange)=\"getOnL3MerchantChange()\"\r\n                             bindLabel=\"merchantName\"\r\n                             placeholder=\"{{'home-page.choose.sub.company' | translate }}\">\r\n                    <ng-template ng-label-tmp let-item=\"item\">\r\n                      {{item.merchantName}}\r\n                    </ng-template>\r\n                    <ng-template ng-option-tmp let-item=\"item\">\r\n                      <div title=\"{{item.merchantId}}\">{{item.merchantName}}</div>\r\n                    </ng-template>\r\n                  </ng-select>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\" align=\"right\">\r\n                <button type=\"button\" class=\"btn btn-secondary\"\r\n                        (click)=\"openFirmModal(false);\">\r\n                  {{'dcb.button.apply' | translate }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Merchant Select Dialog Finish-->\r\n<!----İade Et Start----->\r\n  <div class=\"overlay\" role=\"dialog\"\r\n       [ngStyle]=\"{'display': returnIsOpen ? 'block' : 'none', 'opacity': 1}\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\" style=\"min-height:450px; margin-top: 5rem; width: 75%\">\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\">{{\"dcb.refund.title\" | translate}}</h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"col-12\">{{\"dcb.refund.description\" |translate}}</div>\r\n          <div class=\"col-12 mt-3\">\r\n            <span>{{\"dcb.refund.order.no\" | translate}}: <span class=\"pl-2\">{{returnToModel?.transactionId}}</span></span>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <span>{{\"dcb.refund.transaction.amount\" | translate}}: <span style=\"padding-left: 50px\">{{returnToModel?.transactionAmount | number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</span></span>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <input type=\"checkbox\" (ngModelChange)=\"checkValueChange($event)\" [(ngModel)]=\"checkValue\"><span class=\"pl-1\">{{\"dcb.refund.partial\" | translate}}</span>\r\n          </div>\r\n          <div class=\"col-12 mt-2\" *ngIf=\"checkValue\">\r\n            <div class=\"row\">\r\n              <div class=\"col-3\">\r\n                {{\"dcb.refund.amount\" | translate}}:\r\n              </div>\r\n              <div class=\"col-9\">\r\n                <input appDecimalAmount (ngModelChange)=\"refundAmountChange($event)\" placeholder=\"0,00 TL\" [(ngModel)]=\"refundAmount\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <div class=\"row\">\r\n              <div class=\"col-3\">\r\n                {{\"dcb.refund.reason\" | translate}}:\r\n              </div>\r\n              <div class=\"col-9\">\r\n                <textarea [maxLength]=\"400\" [(ngModel)]=\"refundReason\"></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-3 p-1 text-center\" style=\"border: 2px solid #ff00009e; color: red\" *ngIf=\"netAmount\">\r\n            {{'dcb.cannot.greater.than.transaction.net.amount' | translate}}\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\" style=\"display: block !important; padding-left: 30%;\" align=\"right\">\r\n          <div class=\"row\">\r\n            <button class=\"btn btn-secondary\" (click)=\"refundModal(false)\">{{\"dcb.refund.cancel\" | translate}}</button>\r\n            <button class=\"btn btn-dark\" (click)=\"refundContinue()\">{{\"dcb.refund.go\" | translate}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n<!----İade Et Finish----->\r\n</div>\r\n\r\n<!----İade Et Summary Start----->\r\n<div class=\"overlay\" role=\"dialog\"\r\n     [ngStyle]=\"{'display': summaryRefund ? 'block' : 'none', 'opacity': 1}\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\" style=\"min-height:450px; margin-top: 5rem; width: 75%\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">İşlem İadesi</h4>\r\n        <button type=\"button\" aria-label=\"Close\" class=\"close\">\r\n          <span aria-hidden=\"true\" (click)=\"refundSummaryCloseIcon()\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"col-12 mt-2\">\r\n          <span>Sipariş Numarası: <span class=\"pl-2\">{{dcbRefundDto?.transactionId}}</span></span>\r\n        </div>\r\n        <div class=\"col-12 mt-2\">\r\n          <span>İşlem Tutarı: <span style=\"padding-left: 50px\">{{dcbRefundDto?.amount | number: '1.2-2' : 'tr-TR'}}&nbsp;&nbsp;{{'dcb.currency' | translate }}</span></span>\r\n        </div>\r\n        <div class=\"col-12 mt-2\" *ngIf=\"dcbRefundDto?.refundAmount\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n              İade Tutarı:\r\n            </div>\r\n            <div class=\"col-9\">\r\n              <input disabled type=\"text\" placeholder=\"0,00 TL\" [value]=\"dcbRefundDto?.refundAmount | number: '1.2-2' : 'tr-TR' + ' TL'\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 mt-2\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n              İade Sebebi:\r\n            </div>\r\n            <div class=\"col-9\">\r\n              <textarea [value]=\"dcbRefundDto?.refundReason\" disabled></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\" style=\"display: block !important; padding-left: 38%;\" align=\"right\">\r\n        <div class=\"row\">\r\n          <button class=\"btn btn-secondary\" (click)=\"refundSummaryCancel(false)\">Geri</button>\r\n          <button class=\"btn btn-dark\" (click)=\"refundSummaryContinue()\">Onay</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!----İade Et Summary Finish----->\r\n\r\n<div *ngIf=\"!isPermission\" class=\"row\">\r\n    <div class=\"col-12 col-sm-12\" style=\"background-color: white;height: 10rem\">\r\n        <label style=\"margin-top: 4rem\">{{message| translate }}</label>\r\n    </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.html b/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.html
--- a/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.html	(revision 2c94744d97df44e549aa164726e1988ece85f2da)
+++ b/src/app/pages/full-pages/dcb-transaction/dcb-transaction.component.html	(date 1644234337946)
@@ -174,7 +174,7 @@
                         <td style="color: #975aff!important;cursor: pointer;" (click)="openTransactionDetailModal(true);transactionDetail(row)">
                           {{'dcb.detail' | translate }}
                         </td>
-                        <td style="color: #ff5722!important;cursor: pointer;" *ngIf="(['ODENDI','ODENMEDI'].includes(row.paymentStatus))" (click)="refundModal(true, row)">
+                        <td style="color: #ff5722!important;cursor: pointer;" *ngIf="(['ODENDI','ODENMEDI'].includes(row.paymentStatus)) && row.orderType === 'SATIS'" (click)="refundModal(true, row)">
                           {{'dcb.return.to' | translate}}
                         </td>
                     </tr>
